
;; Function StatusBar::StatusBar(Glib::RefPtr<Gtk::Application>) (_ZN9StatusBarC2EN4Glib6RefPtrIN3Gtk11ApplicationEEE, funcdef_no=7428, decl_uid=231313, symbol_order=2925)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 5 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 12.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 28.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 41.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r90: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r90,l0) best AREG, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 41(l0): point = 1
   Insn 40(l0): point = 3
   Insn 39(l0): point = 5
   Insn 38(l0): point = 7
   Insn 37(l0): point = 9
   Insn 36(l0): point = 11
   Insn 46(l0): point = 13
   Insn 49(l0): point = 16
   Insn 31(l0): point = 18
   Insn 30(l0): point = 20
   Insn 29(l0): point = 22
   Insn 28(l0): point = 24
   Insn 27(l0): point = 26
   Insn 26(l0): point = 28
   Insn 25(l0): point = 30
   Insn 24(l0): point = 32
   Insn 23(l0): point = 34
   Insn 22(l0): point = 36
   Insn 20(l0): point = 39
   Insn 19(l0): point = 41
   Insn 18(l0): point = 43
   Insn 17(l0): point = 45
   Insn 16(l0): point = 47
   Insn 15(l0): point = 49
   Insn 14(l0): point = 51
   Insn 13(l0): point = 53
   Insn 12(l0): point = 55
   Insn 11(l0): point = 57
   Insn 10(l0): point = 59
   Insn 9(l0): point = 61
   Insn 8(l0): point = 63
   Insn 7(l0): point = 65
   Insn 3(l0): point = 67
   Insn 2(l0): point = 69
 a0(r83): [4..5]
 a1(r90): [6..13]
 a2(r89): [10..11]
 a3(r88): [35..36]
 a4(r87): [44..45]
 a5(r86): [50..53]
 a6(r85): [60..61]
 a7(r84): [64..65]
Compressing live ranges: from 72 to 14 - 19%
Ranges after the compression:
 a0(r83): [0..1]
 a1(r90): [2..3]
 a2(r89): [2..3]
 a3(r88): [4..5]
 a4(r87): [6..7]
 a5(r86): [8..9]
 a6(r85): [10..11]
 a7(r84): [12..13]
  regions=1, blocks=6, points=14
    allocnos=8 (big 0), copies=0, conflicts=0, ranges=8
Disposition:
    0:r83  l0     0    7:r84  l0     0    6:r85  l0     0    5:r86  l0     0
    4:r87  l0     0    3:r88  l0     0    2:r89  l0     0    1:r90  l0     3
+++Costs: overall -7, reg -7, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


StatusBar::StatusBar(Glib::RefPtr<Gtk::Application>)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={10d,1u} r1={11d,1u} r2={9d} r4={14d,6u} r5={17d,9u} r6={1d,5u} r7={1d,13u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,4u} r17={12d} r18={8d} r19={8d} r20={1d,13u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} 
;;    total ref usage 651{591d,60u,0e} in 34{26 regular + 8 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 85 86 87
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 mainApp+0 S8 A64])
        (reg:DI 4 si [ mainApp ])) src/StatusBar.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ mainApp ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:60 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (mem/f/j:DI (reg/f:DI 84) [0 this_1(D)->_vptr.StatusBar+0 S8 A64])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV9StatusBar")  <var_decl 0x7fe75aa3eed8 _ZTV9StatusBar>)
                (const_int 16 [0x10])))) src/StatusBar.cpp:60 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 mainApp+0 S8 A64])) src/StatusBar.cpp:61 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 4 si)
        (reg:DI 85)) src/StatusBar.cpp:61 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3appE") [flags 0x2]  <var_decl 0x7fe75aa3eab0 app>)) src/StatusBar.cpp:61 89 {*movdi_internal}
     (nil))
(call_insn 12 11 13 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZN4Glib6RefPtrIN3Gtk11ApplicationEEaSERKS3_") [flags 0x1]  <function_decl 0x7fe75aa49600 operator=>) [0 operator= S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:61 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_UNUSED (reg:DI 0 ax)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 13 12 14 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:62 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC0") [flags 0x2]  <var_decl 0x7fe75a4261c8 *.LC0>)) src/StatusBar.cpp:62 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 86)) src/StatusBar.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref:DI ("_ZN4Glib7ustringC1EPKc") [flags 0x41]  <function_decl 0x7fe762551a00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:62 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:62 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 18 17 19 2 (set (reg:DI 4 si)
        (reg:DI 87)) src/StatusBar.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:62 89 {*movdi_internal}
     (nil))
(call_insn 20 19 21 2 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk6Window9set_titleERKN4Glib7ustringE") [flags 0x41]  <function_decl 0x7fe75cbcb800 set_title>) [0 set_title S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:62 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88
(note 21 20 22 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 22 21 23 3 (parallel [
            (set (reg:DI 88)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:62 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 23 22 24 3 (set (reg:DI 5 di)
        (reg:DI 88)) src/StatusBar.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 24 23 25 3 (call (mem:QI (symbol_ref:DI ("_ZN4Glib7ustringD1Ev") [flags 0x41]  <function_decl 0x7fe76255d600 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:62 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 25 24 26 3 (set (reg:SI 1 dx)
        (const_int 100 [0x64])) src/StatusBar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 26 25 27 3 (set (reg:SI 4 si)
        (const_int 1366 [0x556])) src/StatusBar.cpp:63 90 {*movsi_internal}
     (nil))
(insn 27 26 28 3 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:63 89 {*movdi_internal}
     (nil))
(call_insn 28 27 29 3 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk6Window16set_default_sizeEii") [flags 0x41]  <function_decl 0x7fe75cbeba00 set_default_size>) [0 set_default_size S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:63 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 29 28 30 3 (set (reg:SI 4 si)
        (const_int 0 [0])) src/StatusBar.cpp:65 90 {*movsi_internal}
     (nil))
(insn 30 29 31 3 (set (reg:DI 5 di)
        (const:DI (plus:DI (symbol_ref:DI ("_ZN9StatusBar3barE") [flags 0x2]  <var_decl 0x7fe75aa3ec78 bar>)
                (const_int 32 [0x20])))) src/StatusBar.cpp:65 89 {*movdi_internal}
     (nil))
(call_insn 31 30 49 3 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk10Orientable15set_orientationENS_11OrientationE") [flags 0x41]  <function_decl 0x7fe75cc20a00 set_orientation>) [0 set_orientation S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:65 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(jump_insn 49 31 50 3 (set (pc)
        (label_ref 48)) 636 {jump}
     (nil)
 -> 48)
;;  succ:       5 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 50 49 45)
;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 4 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 89 90
(code_label/s 45 50 47 4 3 "" [1 uses])
(note 47 45 46 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 46 47 36 4 (set (reg:DI 90)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 36 46 37 4 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:62 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 37 36 38 4 (set (reg:DI 5 di)
        (reg:DI 89)) src/StatusBar.cpp:62 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 38 37 39 4 (call (mem:QI (symbol_ref:DI ("_ZN4Glib7ustringD1Ev") [flags 0x41]  <function_decl 0x7fe76255d600 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:62 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -2 [0xfffffffffffffffe])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 39 38 40 4 (set (reg/f:DI 83 [ D.237911 ])
        (reg:DI 90)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 90)
        (nil)))
(insn 40 39 41 4 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.237911 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237911 ])
        (nil)))
(call_insn 41 40 42 4 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fe7681ae300 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 42 41 48)
;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 [100.0%] 
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 48 42 44 5 4 "" [1 uses])
(note 44 48 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int StatusBar::run() (_ZN9StatusBar3runEv, funcdef_no=7430, decl_uid=231302, symbol_order=2927)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 17.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best AREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4

   Insn 26(l0): point = 0
   Insn 25(l0): point = 2
   Insn 21(l0): point = 4
   Insn 18(l0): point = 6
   Insn 17(l0): point = 8
   Insn 16(l0): point = 10
   Insn 15(l0): point = 12
   Insn 14(l0): point = 14
   Insn 13(l0): point = 16
   Insn 12(l0): point = 18
   Insn 11(l0): point = 20
   Insn 10(l0): point = 22
   Insn 9(l0): point = 24
   Insn 8(l0): point = 26
   Insn 7(l0): point = 28
   Insn 6(l0): point = 30
   Insn 2(l0): point = 32
 a0(r85): [3..4]
 a1(r84): [5..6]
 a2(r83): [11..14]
Compressing live ranges: from 35 to 6 - 17%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    2:r83  l0     0    1:r84  l0     0    0:r85  l0     0
+++Costs: overall -3, reg -3, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int StatusBar::run()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={6d,4u} r1={5d} r2={5d} r4={8d,3u} r5={9d,5u} r6={1d,2u} r7={1d,6u} r8={4d} r9={4d} r10={4d} r11={4d} r12={4d} r13={4d} r14={4d} r15={4d} r16={1d,1u} r17={4d} r18={4d} r19={4d} r20={1d,3u} r21={5d} r22={5d} r23={5d} r24={5d} r25={5d} r26={5d} r27={5d} r28={5d} r29={4d} r30={4d} r31={4d} r32={4d} r33={4d} r34={4d} r35={4d} r36={4d} r37={5d} r38={5d} r39={4d} r40={4d} r45={4d} r46={4d} r47={4d} r48={4d} r49={4d} r50={4d} r51={4d} r52={4d} r53={4d} r54={4d} r55={4d} r56={4d} r57={4d} r58={4d} r59={4d} r60={4d} r61={4d} r62={4d} r63={4d} r64={4d} r65={4d} r66={4d} r67={4d} r68={4d} r69={4d} r70={4d} r71={4d} r72={4d} r73={4d} r74={4d} r75={4d} r76={4d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 329{302d,27u,0e} in 17{13 regular + 4 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:74 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZN9StatusBar3barE") [flags 0x2]  <var_decl 0x7fe75aa3ec78 bar>)) src/StatusBar.cpp:75 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:75 89 {*movdi_internal}
     (nil))
(call_insn 8 7 9 2 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk9Container3addERNS_6WidgetE") [flags 0x41]  <function_decl 0x7fe75cafae00 add>) [0 add S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:75 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 9 8 10 2 (set (reg:SI 4 si)
        (const_int 1 [0x1])) src/StatusBar.cpp:76 90 {*movsi_internal}
     (nil))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:76 89 {*movdi_internal}
     (nil))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk9Container17show_all_childrenEb") [flags 0x41]  <function_decl 0x7fe75cb09f00 show_all_children>) [0 show_all_children S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:76 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3appE") [flags 0x2]  <var_decl 0x7fe75aa3eab0 app>)) src/StatusBar.cpp:78 89 {*movdi_internal}
     (nil))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref/i:DI ("_ZNK4Glib6RefPtrIN3Gtk11ApplicationEEptEv") [flags 0x1]  <function_decl 0x7fe75aa49a00 operator->>) [0 operator-> S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:78 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 13 15 2 (set (reg/f:DI 83 [ D.237913 ])
        (reg:DI 0 ax)) src/StatusBar.cpp:78 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:78 89 {*movdi_internal}
     (nil))
(insn 16 15 17 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.237913 ])) src/StatusBar.cpp:78 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237913 ])
        (nil)))
(call_insn 17 16 18 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZN3Gtk11Application3runERNS_6WindowE") [flags 0x41]  <function_decl 0x7fe75cb7fb00 run>) [0 run S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:78 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 18 17 21 2 (set (reg:SI 84 [ D.237914 ])
        (reg:SI 0 ax)) src/StatusBar.cpp:78 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 21 18 25 2 (set (reg:SI 85 [ <retval> ])
        (reg:SI 84 [ D.237914 ])) src/StatusBar.cpp:78 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 84 [ D.237914 ])
        (nil)))
(insn 25 21 26 2 (set (reg/i:SI 0 ax)
        (reg:SI 85 [ <retval> ])) src/StatusBar.cpp:79 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ <retval> ])
        (nil)))
(insn 26 25 0 2 (use (reg/i:SI 0 ax)) src/StatusBar.cpp:79 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function StatusBar::~StatusBar() (_ZN9StatusBarD2Ev, funcdef_no=7432, decl_uid=231322, symbol_order=2929)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 16.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a2(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 16(l0): point = 1
   Insn 15(l0): point = 3
   Insn 14(l0): point = 5
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 7(l0): point = 14
   Insn 6(l0): point = 16
   Insn 2(l0): point = 18
 a0(r85): [4..5]
 a1(r83): [11..12]
 a2(r84): [15..16]
Compressing live ranges: from 21 to 6 - 28%
Ranges after the compression:
 a0(r85): [0..1]
 a1(r83): [2..3]
 a2(r84): [4..5]
  regions=1, blocks=5, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    2:r84  l0     0    0:r85  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


StatusBar::~StatusBar()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={2d,1u} r18={1d} r19={1d} r20={1d,7u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 117{92d,25u,0e} in 9{8 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:82 89 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (mem/f/j:DI (reg/f:DI 84) [0 this_1(D)->_vptr.StatusBar+0 S8 A64])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV9StatusBar")  <var_decl 0x7fe75aa3eed8 _ZTV9StatusBar>)
                (const_int 16 [0x10])))) src/StatusBar.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 10 7 11 2 (set (reg:SI 83 [ D.237915 ])
        (const_int 0 [0])) src/StatusBar.cpp:84 90 {*movsi_internal}
     (nil))
(insn 11 10 12 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 83 [ D.237915 ])
            (const_int 0 [0]))) src/StatusBar.cpp:84 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 83 [ D.237915 ])
        (nil)))
(jump_insn 12 11 13 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 19)
            (pc))) src/StatusBar.cpp:84 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 19)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85
(note 13 12 14 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 14 13 15 3 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:84 89 {*movdi_internal}
     (nil))
(insn 15 14 16 3 (set (reg:DI 5 di)
        (reg:DI 85)) src/StatusBar.cpp:84 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(call_insn 16 15 19 3 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fe7681b4100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:84 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 19 16 20 4 7 "" [1 uses])
(note 20 19 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual StatusBar::~StatusBar() (_ZN9StatusBarD0Ev, funcdef_no=7434, decl_uid=231316, symbol_order=2931)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 2(l0): point = 12
 a0(r84): [3..4]
 a1(r83): [9..10]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual StatusBar::~StatusBar()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 176{159d,17u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:82 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:84 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) src/StatusBar.cpp:84 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref:DI ("_ZN9StatusBarD2Ev") [flags 0x3]  <function_decl 0x7fe75aa43300 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:84 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 12 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:84 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 84)) src/StatusBar.cpp:84 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fe7681b4100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:84 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function BarLabel::BarLabel() (_ZN8BarLabelC2Ev, funcdef_no=7436, decl_uid=231339, symbol_order=2933)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 13 n_edges 17 count 13 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 15.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 26.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 38.
verify found no changes in insn with uid = 46.
verify found no changes in insn with uid = 54.
verify found no changes in insn with uid = 62.
verify found no changes in insn with uid = 65.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r101,l0) best AREG, allocno GENERAL_REGS
    r100: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r100,l0) best AREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a12 (r95,l0) best DIREG, allocno GENERAL_REGS
    r94: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r94,l0) best SIREG, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a16 (r92,l0) best DIREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a8 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a10 (r85,l0) best DIREG, allocno GENERAL_REGS
    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a13 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a17 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:24 SSE_REGS:24 ALL_SSE_REGS:24 MMX_REGS:29 FP_TOP_SSE_REGS:408 FP_SECOND_SSE_REGS:408 FLOAT_SSE_REGS:408 FLOAT_INT_REGS:408 INT_SSE_REGS:25 FLOAT_INT_SSE_REGS:408 ALL_REGS:408 MEM:5
  a2(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a5(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a7(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a8(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a9(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a10(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a11(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a14(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a15(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a16(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a17(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a18(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a19(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 65(l0): point = 1
   Insn 64(l0): point = 3
   Insn 63(l0): point = 5
   Insn 62(l0): point = 7
   Insn 61(l0): point = 9
   Insn 60(l0): point = 11
   Insn 59(l0): point = 13
   Insn 70(l0): point = 16
   Insn 83(l0): point = 19
   Insn 55(l0): point = 21
   Insn 54(l0): point = 23
   Insn 53(l0): point = 25
   Insn 52(l0): point = 27
   Insn 76(l0): point = 29
   Insn 81(l0): point = 32
   Insn 46(l0): point = 35
   Insn 45(l0): point = 37
   Insn 44(l0): point = 39
   Insn 43(l0): point = 41
   Insn 42(l0): point = 43
   Insn 41(l0): point = 45
   Insn 40(l0): point = 47
   Insn 38(l0): point = 50
   Insn 37(l0): point = 52
   Insn 36(l0): point = 54
   Insn 35(l0): point = 56
   Insn 34(l0): point = 58
   Insn 32(l0): point = 61
   Insn 31(l0): point = 63
   Insn 30(l0): point = 65
   Insn 29(l0): point = 67
   Insn 28(l0): point = 69
   Insn 26(l0): point = 72
   Insn 25(l0): point = 74
   Insn 24(l0): point = 76
   Insn 22(l0): point = 79
   Insn 21(l0): point = 81
   Insn 20(l0): point = 83
   Insn 19(l0): point = 85
   Insn 18(l0): point = 87
   Insn 17(l0): point = 89
   Insn 15(l0): point = 92
   Insn 14(l0): point = 94
   Insn 13(l0): point = 96
   Insn 12(l0): point = 98
   Insn 11(l0): point = 100
   Insn 10(l0): point = 102
   Insn 9(l0): point = 104
   Insn 8(l0): point = 106
   Insn 7(l0): point = 108
   Insn 6(l0): point = 110
   Insn 2(l0): point = 112
 a0(r89): [4..5]
 a1(r100): [19..21] [6..16]
 a2(r88): [10..11]
 a3(r104): [12..13]
 a4(r101): [22..29]
 a5(r99): [26..27]
 a6(r87): [40..45]
 a7(r98): [46..47]
 a8(r86): [53..56]
 a9(r97): [57..58]
 a10(r85): [64..67]
 a11(r96): [68..69]
 a12(r95): [75..76]
 a13(r84): [82..87]
 a14(r94): [84..85]
 a15(r93): [88..89]
 a16(r92): [95..98]
 a17(r83): [103..104]
 a18(r91): [105..106]
 a19(r90): [109..110]
Compressing live ranges: from 115 to 36 - 31%
Ranges after the compression:
 a0(r89): [0..1]
 a1(r100): [2..7]
 a2(r88): [2..3]
 a3(r104): [4..5]
 a4(r101): [8..9]
 a5(r99): [8..9]
 a6(r87): [10..11]
 a7(r98): [12..13]
 a8(r86): [14..15]
 a9(r97): [16..17]
 a10(r85): [18..19]
 a11(r96): [20..21]
 a12(r95): [22..23]
 a13(r84): [24..25]
 a14(r94): [24..25]
 a15(r93): [26..27]
 a16(r92): [28..29]
 a17(r83): [30..31]
 a18(r91): [32..33]
 a19(r90): [34..35]
  regions=1, blocks=13, points=36
    allocnos=20 (big 0), copies=0, conflicts=0, ranges=20
Disposition:
   17:r83  l0     0   13:r84  l0     1   10:r85  l0     0    8:r86  l0     0
    6:r87  l0     0    2:r88  l0     0    0:r89  l0     0   19:r90  l0     0
   18:r91  l0     0   16:r92  l0     0   15:r93  l0     0   14:r94  l0     0
   12:r95  l0     0   11:r96  l0     0    9:r97  l0     0    7:r98  l0     0
    5:r99  l0     0    1:r100 l0     3    4:r101 l0     3    3:r104 l0     0
+++Costs: overall -13, reg -13, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


BarLabel::BarLabel()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 2[cx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={13d,2u} r1={14d,1u} r2={12d,1u} r4={16d,5u} r5={21d,11u} r6={1d,12u} r7={1d,22u} r8={10d} r9={10d} r10={10d} r11={10d} r12={10d} r13={10d} r14={10d} r15={10d} r16={1d,11u} r17={20d} r18={10d} r19={10d} r20={1d,24u,6e} r21={11d} r22={11d} r23={11d} r24={11d} r25={11d} r26={11d} r27={11d} r28={11d} r29={10d} r30={10d} r31={10d} r32={10d} r33={10d} r34={10d} r35={10d} r36={10d} r37={11d} r38={11d} r39={10d} r40={10d} r45={10d} r46={10d} r47={10d} r48={10d} r49={10d} r50={10d} r51={10d} r52={10d} r53={10d} r54={10d} r55={10d} r56={10d} r57={10d} r58={10d} r59={10d} r60={10d} r61={10d} r62={10d} r63={10d} r64={10d} r65={10d} r66={10d} r67={10d} r68={10d} r69={10d} r70={10d} r71={10d} r72={10d} r73={10d} r74={10d} r75={10d} r76={10d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={2d,1u} r101={1d,1u} r104={1d,1u} 
;;    total ref usage 866{751d,109u,6e} in 52{42 regular + 10 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 90 91 92
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:88 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 90)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:88 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/j:DI (reg/f:DI 90) [0 this_1(D)->_vptr.BarLabel+0 S8 A64])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV8BarLabel")  <var_decl 0x7fe75aa46390 _ZTV8BarLabel>)
                (const_int 16 [0x10])))) src/StatusBar.cpp:88 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 90)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 91)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:88 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:DI 83 [ D.237917 ])
                (plus:DI (reg/f:DI 91)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:88 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 91)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.237917 ])) src/StatusBar.cpp:88 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237917 ])
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk5LabelC1Ev") [flags 0x41]  <function_decl 0x7fe75c5c1d00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:88 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 92)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:89 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC1") [flags 0x2]  <var_decl 0x7fe75a42ea18 *.LC1>)) src/StatusBar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 5 di)
        (reg:DI 92)) src/StatusBar.cpp:89 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 92)
        (nil)))
(call_insn 15 14 16 2 (call (mem:QI (symbol_ref:DI ("_ZN4Glib7ustringC1EPKc") [flags 0x41]  <function_decl 0x7fe762551a00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:89 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              3 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 84 93 94
(note 16 15 17 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 17 16 18 3 (set (reg/f:DI 93)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:89 89 {*movdi_internal}
     (nil))
(insn 18 17 19 3 (parallel [
            (set (reg/f:DI 84 [ D.237917 ])
                (plus:DI (reg/f:DI 93)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:89 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 19 18 20 3 (parallel [
            (set (reg:DI 94)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:89 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 20 19 21 3 (set (reg:DI 4 si)
        (reg:DI 94)) src/StatusBar.cpp:89 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 94)
        (nil)))
(insn 21 20 22 3 (set (reg:DI 5 di)
        (reg/f:DI 84 [ D.237917 ])) src/StatusBar.cpp:89 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.237917 ])
        (nil)))
(call_insn 22 21 23 3 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk5Label8set_textERKN4Glib7ustringE") [flags 0x41]  <function_decl 0x7fe75c5a5a00 set_text>) [0 set_text S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:89 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 2 [0x2])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
;;  succ:       9 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 95
(note 23 22 24 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 24 23 25 4 (parallel [
            (set (reg:DI 95)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:89 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 25 24 26 4 (set (reg:DI 5 di)
        (reg:DI 95)) src/StatusBar.cpp:89 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95)
        (nil)))
(call_insn 26 25 27 4 (call (mem:QI (symbol_ref:DI ("_ZN4Glib7ustringD1Ev") [flags 0x41]  <function_decl 0x7fe76255d600 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:89 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 1 [0x1])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 85 96
(note 27 26 28 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 28 27 29 5 (set (reg/f:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:90 89 {*movdi_internal}
     (nil))
(insn 29 28 30 5 (parallel [
            (set (reg/f:DI 85 [ D.237918 ])
                (plus:DI (reg/f:DI 96)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:90 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 96)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 30 29 31 5 (set (reg:SI 4 si)
        (const_int 1 [0x1])) src/StatusBar.cpp:90 90 {*movsi_internal}
     (nil))
(insn 31 30 32 5 (set (reg:DI 5 di)
        (reg/f:DI 85 [ D.237918 ])) src/StatusBar.cpp:90 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85 [ D.237918 ])
        (nil)))
(call_insn 32 31 33 5 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk6Widget10set_halignENS_5AlignE") [flags 0x41]  <function_decl 0x7fe75cddcc00 set_halign>) [0 set_halign S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:90 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 86 97
(note 33 32 34 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 34 33 35 6 (set (reg/f:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:91 89 {*movdi_internal}
     (nil))
(insn 35 34 36 6 (parallel [
            (set (reg/f:DI 86 [ D.237918 ])
                (plus:DI (reg/f:DI 97)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:91 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 97)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 36 35 37 6 (set (reg:SI 4 si)
        (const_int 1 [0x1])) src/StatusBar.cpp:91 90 {*movsi_internal}
     (nil))
(insn 37 36 38 6 (set (reg:DI 5 di)
        (reg/f:DI 86 [ D.237918 ])) src/StatusBar.cpp:91 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86 [ D.237918 ])
        (nil)))
(call_insn 38 37 39 6 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk6Widget10set_valignENS_5AlignE") [flags 0x41]  <function_decl 0x7fe75cddcf00 set_valign>) [0 set_valign S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:91 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 1 [0x1])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87 98
(note 39 38 40 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 40 39 41 7 (set (reg/f:DI 98)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:93 89 {*movdi_internal}
     (nil))
(insn 41 40 42 7 (parallel [
            (set (reg/f:DI 87 [ D.237918 ])
                (plus:DI (reg/f:DI 98)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:93 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 42 41 43 7 (set (reg:SI 2 cx)
        (const_int 0 [0])) src/StatusBar.cpp:93 90 {*movsi_internal}
     (nil))
(insn 43 42 44 7 (set (reg:SI 1 dx)
        (const_int 0 [0])) src/StatusBar.cpp:93 90 {*movsi_internal}
     (nil))
(insn 44 43 45 7 (set (reg:DI 4 si)
        (reg/f:DI 87 [ D.237918 ])) src/StatusBar.cpp:93 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87 [ D.237918 ])
        (nil)))
(insn 45 44 46 7 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3barE") [flags 0x2]  <var_decl 0x7fe75aa3ec78 bar>)) src/StatusBar.cpp:93 89 {*movdi_internal}
     (nil))
(call_insn 46 45 79 7 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk3Box10pack_startERNS_6WidgetENS_11PackOptionsEj") [flags 0x41]  <function_decl 0x7fe75cc33800 pack_start>) [0 pack_start S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:93 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:SI 2 cx)
                (expr_list:REG_DEAD (reg:SI 1 dx)
                    (expr_list:REG_EH_REGION (const_int 1 [0x1])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (expr_list:SI (use (reg:SI 2 cx))
                    (nil))))))
;;  succ:       10 (ABNORMAL,ABNORMAL_CALL,EH)
;;              8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, RTL, MODIFIED)
;;  pred:       7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(note 79 46 81 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(jump_insn 81 79 82 8 (set (pc)
        (label_ref 80)) src/StatusBar.cpp:98 636 {jump}
     (nil)
 -> 80)
;;  succ:       12 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 82 81 75)
;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 9 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 99 100 101
(code_label/s 75 82 78 9 16 "" [1 uses])
(note 78 75 76 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 76 78 52 9 (set (reg:DI 101)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 52 76 53 9 (parallel [
            (set (reg:DI 99)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:89 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 53 52 54 9 (set (reg:DI 5 di)
        (reg:DI 99)) src/StatusBar.cpp:89 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 54 53 55 9 (call (mem:QI (symbol_ref:DI ("_ZN4Glib7ustringD1Ev") [flags 0x41]  <function_decl 0x7fe76255d600 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:89 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -3 [0xfffffffffffffffd])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 55 54 83 9 (set (reg:DI 100)
        (reg:DI 101)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(jump_insn 83 55 84 9 (set (pc)
        (label_ref 57)) 636 {jump}
     (nil)
 -> 57)
;;  succ:       11 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

(barrier 84 83 69)
;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (ABNORMAL,ABNORMAL_CALL,EH)
;;              4 (ABNORMAL,ABNORMAL_CALL,EH)
;;              5 (ABNORMAL,ABNORMAL_CALL,EH)
;;              6 (ABNORMAL,ABNORMAL_CALL,EH)
;;              7 (ABNORMAL,ABNORMAL_CALL,EH)
;; bb 10 artificial_defs: { d-1(0){ }d-1(1){ }}
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 100
(code_label/s 69 84 74 10 15 "" [1 uses])
(note 74 69 70 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 70 74 57 10 (set (reg:DI 100)
        (reg:DI 0 ax)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
;;  succ:       11 [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 12, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10 [100.0%]  (FALLTHRU)
;;              9 [100.0%] 
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame] 100
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 88 89 104
(code_label 57 70 58 11 14 "" [1 uses])
(note 58 57 59 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 59 58 60 11 (set (reg/f:DI 104)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) src/StatusBar.cpp:88 89 {*movdi_internal}
     (nil))
(insn 60 59 61 11 (parallel [
            (set (reg/f:DI 88 [ D.237917 ])
                (plus:DI (reg/f:DI 104)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:88 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 61 60 62 11 (set (reg:DI 5 di)
        (reg/f:DI 88 [ D.237917 ])) src/StatusBar.cpp:88 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 88 [ D.237917 ])
        (nil)))
(call_insn 62 61 63 11 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk5LabelD1Ev") [flags 0x41]  <function_decl 0x7fe75c5c5600 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:88 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int -4 [0xfffffffffffffffc])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 63 62 64 11 (set (reg/f:DI 89 [ D.237916 ])
        (reg:DI 100)) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(insn 64 63 65 11 (set (reg:DI 5 di)
        (reg/f:DI 89 [ D.237916 ])) 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89 [ D.237916 ])
        (nil)))
(call_insn 65 64 66 11 (call (mem:QI (symbol_ref:DI ("_Unwind_Resume") [flags 0x41]  <function_decl 0x7fe7681ae300 __builtin_unwind_resume>) [0 __builtin_unwind_resume S1 A8])
        (const_int 0 [0])) 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_ARGS_SIZE (const_int 0 [0])
            (expr_list:REG_NORETURN (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:      
;; lr  out 	 7 [sp] 16 [argp] 20 [frame]

(barrier 66 65 80)
;; basic block 12, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 11, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 [100.0%] 
;; bb 12 artificial_defs: { }
;; bb 12 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 80 66 68 12 17 "" [1 uses])
(note 68 80 0 12 [bb 12] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function BarLabel::~BarLabel() (_ZN8BarLabelD2Ev, funcdef_no=7439, decl_uid=231347, symbol_order=2936)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r87: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r87,l0) best DIREG, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a2(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a3(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 20(l0): point = 1
   Insn 19(l0): point = 3
   Insn 18(l0): point = 5
   Insn 16(l0): point = 8
   Insn 15(l0): point = 10
   Insn 14(l0): point = 12
   Insn 11(l0): point = 14
   Insn 10(l0): point = 16
   Insn 9(l0): point = 18
   Insn 8(l0): point = 20
   Insn 7(l0): point = 22
   Insn 6(l0): point = 24
   Insn 2(l0): point = 26
 a0(r87): [4..5]
 a1(r84): [11..12]
 a2(r83): [17..18]
 a3(r86): [19..20]
 a4(r85): [23..24]
Compressing live ranges: from 29 to 10 - 34%
Ranges after the compression:
 a0(r87): [0..1]
 a1(r84): [2..3]
 a2(r83): [4..5]
 a3(r86): [6..7]
 a4(r85): [8..9]
  regions=1, blocks=5, points=10
    allocnos=5 (big 0), copies=0, conflicts=0, ranges=5
Disposition:
    2:r83  l0     0    1:r84  l0     0    4:r85  l0     0    3:r86  l0     0
    0:r87  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


BarLabel::~BarLabel()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,4u} r7={1d,6u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,3u} r17={4d,1u} r18={2d} r19={2d} r20={1d,8u,1e} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} 
;;    total ref usage 195{164d,30u,1e} in 13{11 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:100 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (mem/f/j:DI (reg/f:DI 85) [0 this_1(D)->_vptr.BarLabel+0 S8 A64])
        (const:DI (plus:DI (symbol_ref/i:DI ("_ZTV8BarLabel")  <var_decl 0x7fe75aa46390 _ZTV8BarLabel>)
                (const_int 16 [0x10])))) src/StatusBar.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 8 7 9 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:100 89 {*movdi_internal}
     (nil))
(insn 9 8 10 2 (parallel [
            (set (reg/f:DI 83 [ D.237920 ])
                (plus:DI (reg/f:DI 86)
                    (const_int 8 [0x8])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:100 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (expr_list:REG_EQUAL (plus:DI (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
                    (const_int 8 [0x8]))
                (nil)))))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.237920 ])) src/StatusBar.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237920 ])
        (nil)))
(call_insn 11 10 14 2 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk5LabelD1Ev") [flags 0x41]  <function_decl 0x7fe75c5c5600 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:100 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 14 11 15 2 (set (reg:SI 84 [ D.237921 ])
        (const_int 0 [0])) src/StatusBar.cpp:101 90 {*movsi_internal}
     (nil))
(insn 15 14 16 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:SI 84 [ D.237921 ])
            (const_int 0 [0]))) src/StatusBar.cpp:101 3 {*cmpsi_ccno_1}
     (expr_list:REG_DEAD (reg:SI 84 [ D.237921 ])
        (nil)))
(jump_insn 16 15 17 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 23)
            (pc))) src/StatusBar.cpp:101 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 23)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 87
(note 17 16 18 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 18 17 19 3 (set (reg:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:101 89 {*movdi_internal}
     (nil))
(insn 19 18 20 3 (set (reg:DI 5 di)
        (reg:DI 87)) src/StatusBar.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(call_insn 20 19 23 3 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fe7681b4100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:101 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 23 20 24 4 18 "" [1 uses])
(note 24 23 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function virtual BarLabel::~BarLabel() (_ZN8BarLabelD0Ev, funcdef_no=7441, decl_uid=231341, symbol_order=2938)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 8.
verify found no changes in insn with uid = 13.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r84: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best DIREG, allocno GENERAL_REGS
    r83: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best DIREG, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 13(l0): point = 0
   Insn 12(l0): point = 2
   Insn 11(l0): point = 4
   Insn 8(l0): point = 6
   Insn 7(l0): point = 8
   Insn 6(l0): point = 10
   Insn 2(l0): point = 12
 a0(r84): [3..4]
 a1(r83): [9..10]
Compressing live ranges: from 15 to 4 - 26%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
  regions=1, blocks=3, points=4
    allocnos=2 (big 0), copies=0, conflicts=0, ranges=2
Disposition:
    1:r83  l0     0    0:r84  l0     0
+++Costs: overall -2, reg -2, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


virtual BarLabel::~BarLabel()

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={3d} r1={3d} r2={3d} r4={3d} r5={5d,3u} r6={1d,2u} r7={1d,4u} r8={2d} r9={2d} r10={2d} r11={2d} r12={2d} r13={2d} r14={2d} r15={2d} r16={1d,1u} r17={2d} r18={2d} r19={2d} r20={1d,5u} r21={3d} r22={3d} r23={3d} r24={3d} r25={3d} r26={3d} r27={3d} r28={3d} r29={2d} r30={2d} r31={2d} r32={2d} r33={2d} r34={2d} r35={2d} r36={2d} r37={3d} r38={3d} r39={2d} r40={2d} r45={2d} r46={2d} r47={2d} r48={2d} r49={2d} r50={2d} r51={2d} r52={2d} r53={2d} r54={2d} r55={2d} r56={2d} r57={2d} r58={2d} r59={2d} r60={2d} r61={2d} r62={2d} r63={2d} r64={2d} r65={2d} r66={2d} r67={2d} r68={2d} r69={2d} r70={2d} r71={2d} r72={2d} r73={2d} r74={2d} r75={2d} r76={2d} r83={1d,1u} r84={1d,1u} 
;;    total ref usage 176{159d,17u,0e} in 7{5 regular + 2 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:100 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:101 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg:DI 5 di)
        (reg:DI 83)) src/StatusBar.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 83)
        (nil)))
(call_insn 8 7 11 2 (call (mem:QI (symbol_ref:DI ("_ZN8BarLabelD2Ev") [flags 0x3]  <function_decl 0x7fe75aa43a00 __base_dtor >) [0 __base_dtor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:101 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 11 8 12 2 (set (reg:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) src/StatusBar.cpp:101 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg:DI 84)) src/StatusBar.cpp:101 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84)
        (nil)))
(call_insn 13 12 0 2 (call (mem:QI (symbol_ref:DI ("_ZdlPv") [flags 0x41]  <function_decl 0x7fe7681b4100 operator delete>) [0 operator delete S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:101 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function int StatusBar::get_percent(std::string) (_ZN9StatusBar11get_percentESs, funcdef_no=7442, decl_uid=231305, symbol_order=2939)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 12 n_edges 16 count 12 (    1)
Building IRA IR
verify found no changes in insn with uid = 9.
verify found no changes in insn with uid = 13.
verify found no changes in insn with uid = 22.
verify found no changes in insn with uid = 25.
verify found no changes in insn with uid = 32.
verify found no changes in insn with uid = 56.
verify found no changes in insn with uid = 88.
verify found no changes in insn with uid = 95.
verify found no changes in insn with uid = 98.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r117,l0) best DIREG, allocno GENERAL_REGS
    r116: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r116,l0) best DREG, allocno GENERAL_REGS
    r115: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r115,l0) best DIREG, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a15 (r109,l0) best DIREG, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a26 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a27 (r100,l0) best DIREG, allocno GENERAL_REGS
    r99: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a28 (r99,l0) best DIREG, allocno GENERAL_REGS
    r98: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a29 (r98,l0) best DIREG, allocno GENERAL_REGS
    r97: preferred DREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a31 (r97,l0) best DREG, allocno GENERAL_REGS
    r96: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a34 (r96,l0) best DIREG, allocno GENERAL_REGS
    r95: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r95,l0) best AREG, allocno GENERAL_REGS
    r94: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r94,l0) best AREG, allocno GENERAL_REGS
    r93: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r93,l0) best AREG, allocno GENERAL_REGS
    r92: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a14 (r92,l0) best AREG, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r90: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r90,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a30 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a32 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a33 (r83,l0) best AREG, allocno GENERAL_REGS

  a0(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a2(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:-1 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a4(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a6(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a7(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a8(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a9(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a11(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a13(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a14(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a15(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a16(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a17(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a18(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a19(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a20(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a21(r90,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a22(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a23(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a24(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 FLOAT_INT_REGS:312 INT_SSE_REGS:312 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a25(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:8
  a26(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a27(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a28(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a29(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a30(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a31(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a32(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:5
  a33(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:-1 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a34(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 107(l0): point = 0
   Insn 106(l0): point = 2
   Insn 102(l0): point = 4
   Insn 99(l0): point = 6
   Insn 98(l0): point = 8
   Insn 97(l0): point = 10
   Insn 96(l0): point = 12
   Insn 95(l0): point = 14
   Insn 94(l0): point = 16
   Insn 93(l0): point = 18
   Insn 92(l0): point = 20
   Insn 91(l0): point = 22
   Insn 90(l0): point = 24
   Insn 89(l0): point = 26
   Insn 88(l0): point = 28
   Insn 87(l0): point = 30
   Insn 86(l0): point = 32
   Insn 40(l0): point = 35
   Insn 39(l0): point = 37
   Insn 38(l0): point = 39
   Insn 37(l0): point = 41
   Insn 36(l0): point = 43
   Insn 83(l0): point = 46
   Insn 82(l0): point = 48
   Insn 80(l0): point = 50
   Insn 79(l0): point = 52
   Insn 78(l0): point = 54
   Insn 76(l0): point = 57
   Insn 75(l0): point = 59
   Insn 74(l0): point = 61
   Insn 73(l0): point = 63
   Insn 72(l0): point = 65
   Insn 69(l0): point = 68
   Insn 46(l0): point = 71
   Insn 45(l0): point = 73
   Insn 44(l0): point = 75
   Insn 43(l0): point = 77
   Insn 42(l0): point = 79
   Insn 66(l0): point = 82
   Insn 59(l0): point = 85
   Insn 58(l0): point = 87
   Insn 57(l0): point = 89
   Insn 56(l0): point = 91
   Insn 55(l0): point = 93
   Insn 54(l0): point = 95
   Insn 53(l0): point = 97
   Insn 52(l0): point = 99
   Insn 51(l0): point = 101
   Insn 50(l0): point = 103
   Insn 49(l0): point = 105
   Insn 48(l0): point = 107
   Insn 63(l0): point = 110
   Insn 62(l0): point = 112
   Insn 61(l0): point = 114
   Insn 109(l0): point = 117
   Insn 32(l0): point = 119
   Insn 31(l0): point = 121
   Insn 30(l0): point = 123
   Insn 29(l0): point = 125
   Insn 28(l0): point = 127
   Insn 27(l0): point = 129
   Insn 26(l0): point = 131
   Insn 25(l0): point = 133
   Insn 24(l0): point = 135
   Insn 23(l0): point = 137
   Insn 22(l0): point = 139
   Insn 21(l0): point = 141
   Insn 20(l0): point = 143
   Insn 19(l0): point = 145
   Insn 18(l0): point = 147
   Insn 17(l0): point = 149
   Insn 16(l0): point = 151
   Insn 15(l0): point = 153
   Insn 14(l0): point = 155
   Insn 13(l0): point = 157
   Insn 12(l0): point = 159
   Insn 11(l0): point = 161
   Insn 10(l0): point = 163
   Insn 9(l0): point = 165
   Insn 8(l0): point = 167
   Insn 7(l0): point = 169
   Insn 3(l0): point = 171
   Insn 2(l0): point = 173
 a0(r95): [3..4]
 a1(r94): [5..6]
 a2(r117): [11..12]
 a3(r93): [21..26]
 a4(r116): [23..24]
 a5(r115): [31..32]
 a6(r88): [49..50]
 a7(r87): [49..52]
 a8(r114): [53..54]
 a9(r86): [60..61]
 a10(r112): [62..63]
 a11(r113): [64..65]
 a12(r110): [111..112]
 a13(r111): [113..114]
 a14(r92): [88..89]
 a15(r109): [94..95]
 a16(r107): [98..99]
 a17(r91): [98..103]
 a18(r108): [100..101]
 a19(r105): [104..105]
 a20(r106): [106..107]
 a21(r90): [74..75]
 a22(r103): [76..77]
 a23(r104): [78..79]
 a24(r89): [38..39]
 a25(r101): [40..41]
 a26(r102): [42..43]
 a27(r100): [122..127]
 a28(r99): [136..137]
 a29(r98): [142..147]
 a30(r85): [144..151]
 a31(r97): [146..149]
 a32(r84): [154..155]
 a33(r83): [160..163]
 a34(r96): [168..169]
Compressing live ranges: from 176 to 60 - 34%
Ranges after the compression:
 a0(r95): [0..1]
 a1(r94): [2..3]
 a2(r117): [4..5]
 a3(r93): [6..7]
 a4(r116): [6..7]
 a5(r115): [8..9]
 a6(r88): [16..17]
 a7(r87): [16..17]
 a8(r114): [18..19]
 a9(r86): [20..21]
 a10(r112): [22..23]
 a11(r113): [24..25]
 a12(r110): [44..45]
 a13(r111): [46..47]
 a14(r92): [32..33]
 a15(r109): [34..35]
 a16(r107): [36..37]
 a17(r91): [36..39]
 a18(r108): [38..39]
 a19(r105): [40..41]
 a20(r106): [42..43]
 a21(r90): [26..27]
 a22(r103): [28..29]
 a23(r104): [30..31]
 a24(r89): [10..11]
 a25(r101): [12..13]
 a26(r102): [14..15]
 a27(r100): [48..49]
 a28(r99): [50..51]
 a29(r98): [52..53]
 a30(r85): [52..53]
 a31(r97): [52..53]
 a32(r84): [54..55]
 a33(r83): [56..57]
 a34(r96): [58..59]
  regions=1, blocks=12, points=60
    allocnos=35 (big 0), copies=0, conflicts=0, ranges=35
Disposition:
   33:r83  l0     0   32:r84  l0     0   30:r85  l0     2    9:r86  l0     0
    7:r87  l0     0    6:r88  l0     1   24:r89  l0     0   21:r90  l0     0
   17:r91  l0     1   14:r92  l0     0    3:r93  l0     2    1:r94  l0     0
    0:r95  l0     0   34:r96  l0     0   31:r97  l0     1   29:r98  l0     0
   28:r99  l0     0   27:r100 l0     0   25:r101 l0     0   26:r102 l0     0
   22:r103 l0     0   23:r104 l0     0   19:r105 l0     0   20:r106 l0     0
   16:r107 l0     0   18:r108 l0     0   15:r109 l0     0   12:r110 l0     0
   13:r111 l0     0   10:r112 l0     0   11:r113 l0     0    8:r114 l0     0
    5:r115 l0     0    4:r116 l0     0    2:r117 l0     0
+++Costs: overall -16, reg -16, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


int StatusBar::get_percent(std::string)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={12d,8u} r1={13d,3u} r2={10d} r4={14d,5u} r5={19d,10u} r6={1d,11u} r7={1d,20u} r8={9d} r9={9d} r10={9d} r11={9d} r12={9d} r13={9d} r14={9d} r15={9d} r16={1d,10u} r17={21d,5u} r18={9d} r19={9d} r20={1d,42u} r21={10d} r22={10d} r23={10d} r24={10d} r25={10d} r26={10d} r27={10d} r28={10d} r29={9d} r30={9d} r31={9d} r32={9d} r33={9d} r34={9d} r35={9d} r36={9d} r37={10d} r38={10d} r39={9d} r40={9d} r45={9d} r46={9d} r47={9d} r48={9d} r49={9d} r50={9d} r51={9d} r52={9d} r53={9d} r54={9d} r55={9d} r56={9d} r57={9d} r58={9d} r59={9d} r60={9d} r61={9d} r62={9d} r63={9d} r64={9d} r65={9d} r66={9d} r67={9d} r68={9d} r69={9d} r70={9d} r71={9d} r72={9d} r73={9d} r74={9d} r75={9d} r76={9d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} r90={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 845{696d,149u,0e} in 83{74 regular + 9 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 96 97 98 99 100
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -72 [0xffffffffffffffb8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) src/StatusBar.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 cmd+0 S8 A64])
        (reg:DI 4 si [ cmd ])) src/StatusBar.cpp:104 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ cmd ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 96)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 cmd+0 S8 A64])) src/StatusBar.cpp:107 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg:DI 5 di)
        (reg:DI 96)) src/StatusBar.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96)
        (nil)))
(call_insn 9 8 10 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSs5c_strEv") [flags 0x41]  <function_decl 0x7fe762de6e00 c_str>) [0 c_str S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:107 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 83 [ D.237922 ])
        (reg:DI 0 ax)) src/StatusBar.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 11 10 12 2 (set (reg:DI 4 si)
        (symbol_ref/f:DI ("*.LC2") [flags 0x2]  <var_decl 0x7fe75a438ed8 *.LC2>)) src/StatusBar.cpp:107 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg:DI 5 di)
        (reg/f:DI 83 [ D.237922 ])) src/StatusBar.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237922 ])
        (nil)))
(call_insn 13 12 14 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("popen") [flags 0x41]  <function_decl 0x7fe75ee56100 popen>) [0 popen S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:107 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 84 [ D.237923 ])
        (reg:DI 0 ax)) src/StatusBar.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 15 14 16 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 handle+0 S8 A64])
        (reg/f:DI 84 [ D.237923 ])) src/StatusBar.cpp:107 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.237923 ])
        (nil)))
(insn 16 15 17 2 (set (reg:SI 85 [ D.237924 ])
        (const_int 20 [0x14])) src/StatusBar.cpp:109 90 {*movsi_internal}
     (nil))
(insn 17 16 18 2 (set (reg:DI 97)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 handle+0 S8 A64])) src/StatusBar.cpp:109 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 98)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -48 [0xffffffffffffffd0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:109 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 1 dx)
        (reg:DI 97)) src/StatusBar.cpp:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 97)
        (nil)))
(insn 20 19 21 2 (set (reg:SI 4 si)
        (reg:SI 85 [ D.237924 ])) src/StatusBar.cpp:109 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 85 [ D.237924 ])
        (nil)))
(insn 21 20 22 2 (set (reg:DI 5 di)
        (reg:DI 98)) src/StatusBar.cpp:109 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 98)
        (nil)))
(call_insn 22 21 23 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fgets") [flags 0x41]  <function_decl 0x7fe75ee4aa00 fgets>) [0 fgets S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:109 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (nil)))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 23 22 24 2 (set (reg:DI 99)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 handle+0 S8 A64])) src/StatusBar.cpp:110 89 {*movdi_internal}
     (nil))
(insn 24 23 25 2 (set (reg:DI 5 di)
        (reg:DI 99)) src/StatusBar.cpp:110 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 99)
        (nil)))
(call_insn 25 24 26 2 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("fclose") [flags 0x41]  <function_decl 0x7fe75ee3c700 fclose>) [0 fclose S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:110 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_UNUSED (reg:SI 0 ax)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 26 25 27 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
        (const_int 0 [0])) src/StatusBar.cpp:113 90 {*movsi_internal}
     (nil))
(insn 27 26 28 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
        (const_int 0 [0])) src/StatusBar.cpp:114 90 {*movsi_internal}
     (nil))
(insn 28 27 29 2 (parallel [
            (set (reg:DI 100)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:116 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 29 28 30 2 (set (reg:DI 1 dx)
        (const_int 4 [0x4])) src/StatusBar.cpp:116 89 {*movdi_internal}
     (nil))
(insn 30 29 31 2 (set (reg:SI 4 si)
        (const_int 0 [0])) src/StatusBar.cpp:116 90 {*movsi_internal}
     (nil))
(insn 31 30 32 2 (set (reg:DI 5 di)
        (reg:DI 100)) src/StatusBar.cpp:116 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 100)
        (nil)))
(call_insn 32 31 109 2 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("memset") [flags 0x41]  <function_decl 0x7fe768102e00 memset>) [0 __builtin_memset S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:116 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:DI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (set (reg:DI 0 ax)
            (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:SI (use (reg:SI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(jump_insn 109 32 110 2 (set (pc)
        (label_ref 70)) src/StatusBar.cpp:118 636 {jump}
     (nil)
 -> 70)
;;  succ:       9 [100.0%] 
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

(barrier 110 109 81)
;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       10
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 89 101 102
(code_label 81 110 35 3 28 "" [1 uses])
(note 35 81 36 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 36 35 37 3 (set (reg:SI 102)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/StatusBar.cpp:119 90 {*movsi_internal}
     (nil))
(insn 37 36 38 3 (set (reg:DI 101)
        (sign_extend:DI (reg:SI 102))) src/StatusBar.cpp:119 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 102)
        (nil)))
(insn 38 37 39 3 (set (reg:QI 89 [ D.237925 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 101))
                (const_int -48 [0xffffffffffffffd0])) [0 output S1 A8])) src/StatusBar.cpp:119 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 101)
        (nil)))
(insn 39 38 40 3 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 89 [ D.237925 ])
            (const_int 47 [0x2f]))) src/StatusBar.cpp:119 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 89 [ D.237925 ])
        (nil)))
(jump_insn 40 39 41 3 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) src/StatusBar.cpp:119 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 67)
;;  succ:       4 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 90 103 104
(note 41 40 42 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 42 41 43 4 (set (reg:SI 104)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/StatusBar.cpp:119 90 {*movsi_internal}
     (nil))
(insn 43 42 44 4 (set (reg:DI 103)
        (sign_extend:DI (reg:SI 104))) src/StatusBar.cpp:119 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 104)
        (nil)))
(insn 44 43 45 4 (set (reg:QI 90 [ D.237925 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 103))
                (const_int -48 [0xffffffffffffffd0])) [0 output S1 A8])) src/StatusBar.cpp:119 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 103)
        (nil)))
(insn 45 44 46 4 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:QI 90 [ D.237925 ])
            (const_int 57 [0x39]))) src/StatusBar.cpp:119 5 {*cmpqi_1}
     (expr_list:REG_DEAD (reg:QI 90 [ D.237925 ])
        (nil)))
(jump_insn 46 45 47 4 (set (pc)
        (if_then_else (gt (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 67)
            (pc))) src/StatusBar.cpp:119 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 67)
;;  succ:       5 (FALLTHRU)
;;              8
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 6, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91 92 105 106 107 108 109
(note 47 46 48 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
(insn 48 47 49 5 (set (reg:SI 106)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/StatusBar.cpp:120 90 {*movsi_internal}
     (nil))
(insn 49 48 50 5 (set (reg:DI 105)
        (sign_extend:DI (reg:SI 106))) src/StatusBar.cpp:120 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 106)
        (nil)))
(insn 50 49 51 5 (set (reg:QI 91 [ D.237925 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 105))
                (const_int -48 [0xffffffffffffffd0])) [0 output S1 A8])) src/StatusBar.cpp:120 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 105)
        (nil)))
(insn 51 50 52 5 (set (reg:SI 108)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) src/StatusBar.cpp:120 90 {*movsi_internal}
     (nil))
(insn 52 51 53 5 (set (reg:DI 107)
        (sign_extend:DI (reg:SI 108))) src/StatusBar.cpp:120 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 108)
        (nil)))
(insn 53 52 54 5 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 107))
                (const_int -64 [0xffffffffffffffc0])) [0 level S1 A8])
        (reg:QI 91 [ D.237925 ])) src/StatusBar.cpp:120 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 107)
        (expr_list:REG_DEAD (reg:QI 91 [ D.237925 ])
            (nil))))
(insn 54 53 55 5 (parallel [
            (set (reg:DI 109)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:121 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 55 54 56 5 (set (reg:DI 5 di)
        (reg:DI 109)) src/StatusBar.cpp:121 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 109)
        (nil)))
(call_insn/i 56 55 57 5 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fe760ebc500 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:121 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 57 56 58 5 (set (reg:SI 92 [ D.237924 ])
        (reg:SI 0 ax)) src/StatusBar.cpp:121 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 58 57 59 5 (set (reg:CCGC 17 flags)
        (compare:CCGC (reg:SI 92 [ D.237924 ])
            (const_int 100 [0x64]))) src/StatusBar.cpp:121 7 {*cmpsi_1}
     (expr_list:REG_DEAD (reg:SI 92 [ D.237924 ])
        (nil)))
(jump_insn 59 58 60 5 (set (pc)
        (if_then_else (le (reg:CCGC 17 flags)
                (const_int 0 [0]))
            (label_ref 64)
            (pc))) src/StatusBar.cpp:121 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCGC 17 flags)
        (nil))
 -> 64)
;;  succ:       6 (FALLTHRU)
;;              7
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 6, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 5, next block 7, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5 (FALLTHRU)
;; bb 6 artificial_defs: { }
;; bb 6 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 110 111
(note 60 59 61 6 [bb 6] NOTE_INSN_BASIC_BLOCK)
(insn 61 60 62 6 (set (reg:SI 111)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) src/StatusBar.cpp:122 90 {*movsi_internal}
     (nil))
(insn 62 61 63 6 (set (reg:DI 110)
        (sign_extend:DI (reg:SI 111))) src/StatusBar.cpp:122 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 111)
        (nil)))
(insn 63 62 64 6 (set (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 110))
                (const_int -64 [0xffffffffffffffc0])) [0 level S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:122 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 110)
        (nil)))
;;  succ:       7 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 7, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 6, next block 8, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       5
;;              6 (FALLTHRU)
;; bb 7 artificial_defs: { }
;; bb 7 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 64 63 65 7 26 "" [1 uses])
(note 65 64 66 7 [bb 7] NOTE_INSN_BASIC_BLOCK)
(insn 66 65 67 7 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:123 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       8 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 8, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 7, next block 9, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3
;;              4
;;              7 (FALLTHRU)
;; bb 8 artificial_defs: { }
;; bb 8 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(code_label 67 66 68 8 25 "" [2 uses])
(note 68 67 69 8 [bb 8] NOTE_INSN_BASIC_BLOCK)
(insn 69 68 70 8 (parallel [
            (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                        (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                (plus:SI (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                            (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])
                    (const_int 1 [0x1])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:126 220 {*addsi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
;;  succ:       9 (FALLTHRU,DFS_BACK)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 9, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 8, next block 10, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       8 (FALLTHRU,DFS_BACK)
;;              2 [100.0%] 
;; bb 9 artificial_defs: { }
;; bb 9 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 86 112 113
(code_label 70 69 71 9 24 "" [1 uses])
(note 71 70 72 9 [bb 9] NOTE_INSN_BASIC_BLOCK)
(insn 72 71 73 9 (set (reg:SI 113)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 i+0 S4 A32])) src/StatusBar.cpp:118 90 {*movsi_internal}
     (nil))
(insn 73 72 74 9 (set (reg:DI 112)
        (sign_extend:DI (reg:SI 113))) src/StatusBar.cpp:118 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 113)
        (nil)))
(insn 74 73 75 9 (set (reg:QI 86 [ D.237925 ])
        (mem/j:QI (plus:DI (plus:DI (reg/f:DI 20 frame)
                    (reg:DI 112))
                (const_int -48 [0xffffffffffffffd0])) [0 output S1 A8])) src/StatusBar.cpp:118 93 {*movqi_internal}
     (expr_list:REG_DEAD (reg:DI 112)
        (nil)))
(insn 75 74 76 9 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:QI 86 [ D.237925 ])
            (const_int 0 [0]))) src/StatusBar.cpp:118 1 {*cmpqi_ccno_1}
     (expr_list:REG_DEAD (reg:QI 86 [ D.237925 ])
        (nil)))
(jump_insn 76 75 77 9 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 84)
            (pc))) src/StatusBar.cpp:118 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 84)
;;  succ:       10 (FALLTHRU)
;;              11
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 10, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 9, next block 11, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9 (FALLTHRU)
;; bb 10 artificial_defs: { }
;; bb 10 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 87 88 114
(note 77 76 78 10 [bb 10] NOTE_INSN_BASIC_BLOCK)
(insn 78 77 79 10 (set (reg:SI 114)
        (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 j+0 S4 A32])) src/StatusBar.cpp:118 90 {*movsi_internal}
     (nil))
(insn 79 78 80 10 (set (reg:DI 87 [ D.237926 ])
        (sign_extend:DI (reg:SI 114))) src/StatusBar.cpp:118 142 {*extendsidi2_rex64}
     (expr_list:REG_DEAD (reg:SI 114)
        (nil)))
(insn 80 79 82 10 (set (reg:DI 88 [ D.237926 ])
        (const_int 3 [0x3])) src/StatusBar.cpp:118 89 {*movdi_internal}
     (nil))
(insn 82 80 83 10 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg:DI 87 [ D.237926 ])
            (reg:DI 88 [ D.237926 ]))) src/StatusBar.cpp:118 8 {*cmpdi_1}
     (expr_list:REG_DEAD (reg:DI 88 [ D.237926 ])
        (expr_list:REG_DEAD (reg:DI 87 [ D.237926 ])
            (nil))))
(jump_insn 83 82 84 10 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref 81)
            (pc))) src/StatusBar.cpp:118 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 81)
;;  succ:       3
;;              11 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 11, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 10, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       9
;;              10 (FALLTHRU)
;; bb 11 artificial_defs: { }
;; bb 11 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 93 94 95 115 116 117
(code_label 84 83 85 11 27 "" [1 uses])
(note 85 84 86 11 [bb 11] NOTE_INSN_BASIC_BLOCK)
(insn 86 85 87 11 (set (reg:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -80 [0xffffffffffffffb0])) [0 cmd+0 S8 A64])) src/StatusBar.cpp:128 89 {*movdi_internal}
     (nil))
(insn 87 86 88 11 (set (reg:DI 5 di)
        (reg:DI 115)) src/StatusBar.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 115)
        (nil)))
(call_insn 88 87 89 11 (set (reg:DI 0 ax)
        (call (mem:QI (symbol_ref:DI ("_ZNKSs5c_strEv") [flags 0x41]  <function_decl 0x7fe762de6e00 c_str>) [0 c_str S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:128 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 89 88 90 11 (set (reg/f:DI 93 [ D.237922 ])
        (reg:DI 0 ax)) src/StatusBar.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 0 ax)
        (nil)))
(insn 90 89 91 11 (parallel [
            (set (reg:DI 116)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:128 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 91 90 92 11 (set (reg:DI 1 dx)
        (reg:DI 116)) src/StatusBar.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 116)
        (nil)))
(insn 92 91 93 11 (set (reg:DI 4 si)
        (reg/f:DI 93 [ D.237922 ])) src/StatusBar.cpp:128 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.237922 ])
        (nil)))
(insn 93 92 94 11 (set (reg:DI 5 di)
        (symbol_ref/f:DI ("*.LC3") [flags 0x2]  <var_decl 0x7fe75a446000 *.LC3>)) src/StatusBar.cpp:128 89 {*movdi_internal}
     (nil))
(insn 94 93 95 11 (set (reg:QI 0 ax)
        (const_int 0 [0])) src/StatusBar.cpp:128 93 {*movqi_internal}
     (nil))
(call_insn 95 94 96 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("printf") [flags 0x41]  <function_decl 0x7fe768111e00 printf>) [0 __builtin_printf S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:128 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (nil)))))
    (expr_list (use (reg:QI 0 ax))
        (expr_list:DI (use (reg:DI 5 di))
            (expr_list:DI (use (reg:DI 4 si))
                (expr_list:DI (use (reg:DI 1 dx))
                    (nil))))))
(insn 96 95 97 11 (parallel [
            (set (reg:DI 117)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -64 [0xffffffffffffffc0])))
            (clobber (reg:CC 17 flags))
        ]) src/StatusBar.cpp:129 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 97 96 98 11 (set (reg:DI 5 di)
        (reg:DI 117)) src/StatusBar.cpp:129 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 117)
        (nil)))
(call_insn/i 98 97 99 11 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("atoi") [flags 0x41]  <function_decl 0x7fe760ebc500 atoi>) [0 atoi S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:129 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 99 98 102 11 (set (reg:SI 94 [ D.237924 ])
        (reg:SI 0 ax)) src/StatusBar.cpp:129 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 0 ax)
        (nil)))
(insn 102 99 106 11 (set (reg:SI 95 [ <retval> ])
        (reg:SI 94 [ D.237924 ])) src/StatusBar.cpp:129 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 94 [ D.237924 ])
        (nil)))
(insn 106 102 107 11 (set (reg/i:SI 0 ax)
        (reg:SI 95 [ <retval> ])) src/StatusBar.cpp:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 95 [ <retval> ])
        (nil)))
(insn 107 106 0 11 (use (reg/i:SI 0 ax)) src/StatusBar.cpp:130 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Glib::RefPtr<T_CppObject>::RefPtr() [with T_CppObject = Gtk::Application] (_ZN4Glib6RefPtrIN3Gtk11ApplicationEEC2Ev, funcdef_no=7718, decl_uid=231490, symbol_order=3215)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 2(l0): point = 4
 a0(r83): [1..2]
Compressing live ranges: from 7 to 2 - 28%
Ranges after the compression:
 a0(r83): [0..1]
  regions=1, blocks=3, points=2
    allocnos=1 (big 0), copies=0, conflicts=0, ranges=1
Disposition:
    0:r83  l0     0
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Glib::RefPtr<T_CppObject>::RefPtr() [with T_CppObject = Gtk::Application]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} 
;;    total ref usage 31{20d,11u,0e} in 3{3 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/glibmm-2.4/glibmm/refptr.h:199 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 83)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:201 89 {*movdi_internal}
     (nil))
(insn 7 6 0 2 (set (mem/f/j:DI (reg/f:DI 83) [0 this_1(D)->pCppObject_+0 S8 A64])
        (const_int 0 [0])) /usr/include/glibmm-2.4/glibmm/refptr.h:201 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83)
        (nil)))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Glib::RefPtr<T_CppObject>& Glib::RefPtr<T_CppObject>::operator=(const Glib::RefPtr<T_CppObject>&) [with T_CppObject = Gtk::Application] (_ZN4Glib6RefPtrIN3Gtk11ApplicationEEaSERKS3_, funcdef_no=7720, decl_uid=231405, symbol_order=3217)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 11.
verify found no changes in insn with uid = 16.
verify found no changes in insn with uid = 20.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a2 (r89,l0) best DIREG, allocno GENERAL_REGS
    r88: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a3 (r88,l0) best DIREG, allocno GENERAL_REGS
    r87: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a4 (r87,l0) best SIREG, allocno GENERAL_REGS
    r86: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a5 (r86,l0) best DIREG, allocno GENERAL_REGS
    r85: preferred SIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a6 (r85,l0) best SIREG, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a3(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a5(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7

   Insn 28(l0): point = 0
   Insn 27(l0): point = 2
   Insn 23(l0): point = 4
   Insn 20(l0): point = 6
   Insn 19(l0): point = 8
   Insn 18(l0): point = 10
   Insn 17(l0): point = 12
   Insn 16(l0): point = 14
   Insn 15(l0): point = 16
   Insn 14(l0): point = 18
   Insn 13(l0): point = 20
   Insn 12(l0): point = 22
   Insn 11(l0): point = 24
   Insn 10(l0): point = 26
   Insn 9(l0): point = 28
   Insn 8(l0): point = 30
   Insn 7(l0): point = 32
   Insn 3(l0): point = 34
   Insn 2(l0): point = 36
 a0(r84): [3..4]
 a1(r83): [5..12]
 a2(r89): [9..10]
 a3(r88): [17..20]
 a4(r87): [19..22]
 a5(r86): [27..30]
 a6(r85): [29..32]
Compressing live ranges: from 39 to 8 - 20%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r89): [2..3]
 a3(r88): [4..5]
 a4(r87): [4..5]
 a5(r86): [6..7]
 a6(r85): [6..7]
  regions=1, blocks=3, points=8
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    1:r83  l0     3    0:r84  l0     0    6:r85  l0     1    5:r86  l0     0
    4:r87  l0     1    3:r88  l0     0    2:r89  l0     0
+++Costs: overall -6, reg -6, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Glib::RefPtr<T_CppObject>& Glib::RefPtr<T_CppObject>::operator=(const Glib::RefPtr<T_CppObject>&) [with T_CppObject = Gtk::Application]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={5d,2u} r1={4d} r2={4d} r4={6d,3u} r5={7d,4u} r6={1d,2u} r7={1d,5u} r8={3d} r9={3d} r10={3d} r11={3d} r12={3d} r13={3d} r14={3d} r15={3d} r16={1d,1u} r17={6d} r18={3d} r19={3d} r20={1d,10u} r21={4d} r22={4d} r23={4d} r24={4d} r25={4d} r26={4d} r27={4d} r28={4d} r29={3d} r30={3d} r31={3d} r32={3d} r33={3d} r34={3d} r35={3d} r36={3d} r37={4d} r38={4d} r39={3d} r40={3d} r45={3d} r46={3d} r47={3d} r48={3d} r49={3d} r50={3d} r51={3d} r52={3d} r53={3d} r54={3d} r55={3d} r56={3d} r57={3d} r58={3d} r59={3d} r60={3d} r61={3d} r62={3d} r63={3d} r64={3d} r65={3d} r66={3d} r67={3d} r68={3d} r69={3d} r70={3d} r71={3d} r72={3d} r73={3d} r74={3d} r75={3d} r76={3d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 273{239d,34u,0e} in 19{16 regular + 3 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 83 84 85 86 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/glibmm-2.4/glibmm/refptr.h:252 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 src+0 S8 A64])
        (reg:DI 4 si [ src ])) /usr/include/glibmm-2.4/glibmm/refptr.h:252 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ src ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 src+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:278 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (parallel [
            (set (reg:DI 86)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:278 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 9 8 10 2 (set (reg:DI 4 si)
        (reg:DI 85)) /usr/include/glibmm-2.4/glibmm/refptr.h:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 85)
        (nil)))
(insn 10 9 11 2 (set (reg:DI 5 di)
        (reg:DI 86)) /usr/include/glibmm-2.4/glibmm/refptr.h:278 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 86)
        (nil)))
(call_insn 11 10 12 2 (call (mem:QI (symbol_ref/i:DI ("_ZN4Glib6RefPtrIN3Gtk11ApplicationEEC1ERKS3_") [flags 0x1]  <function_decl 0x7fe75aa52800 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/glibmm-2.4/glibmm/refptr.h:278 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 12 11 13 2 (parallel [
            (set (reg:DI 87)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:279 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 13 12 14 2 (set (reg:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:279 89 {*movdi_internal}
     (nil))
(insn 14 13 15 2 (set (reg:DI 4 si)
        (reg:DI 87)) /usr/include/glibmm-2.4/glibmm/refptr.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 87)
        (nil)))
(insn 15 14 16 2 (set (reg:DI 5 di)
        (reg:DI 88)) /usr/include/glibmm-2.4/glibmm/refptr.h:279 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 88)
        (nil)))
(call_insn 16 15 17 2 (call (mem:QI (symbol_ref/i:DI ("_ZN4Glib6RefPtrIN3Gtk11ApplicationEE4swapERS3_") [flags 0x1]  <function_decl 0x7fe75aa49500 swap>) [0 swap S1 A8])
        (const_int 0 [0])) /usr/include/glibmm-2.4/glibmm/refptr.h:279 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (nil))))
(insn 17 16 18 2 (set (reg/f:DI 83 [ D.237929 ])
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:280 89 {*movdi_internal}
     (nil))
(insn 18 17 19 2 (parallel [
            (set (reg:DI 89)
                (plus:DI (reg/f:DI 20 frame)
                    (const_int -16 [0xfffffffffffffff0])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:280 221 {*adddi_1}
     (expr_list:REG_UNUSED (reg:CC 17 flags)
        (nil)))
(insn 19 18 20 2 (set (reg:DI 5 di)
        (reg:DI 89)) /usr/include/glibmm-2.4/glibmm/refptr.h:280 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 89)
        (nil)))
(call_insn 20 19 23 2 (call (mem:QI (symbol_ref/i:DI ("_ZN4Glib6RefPtrIN3Gtk11ApplicationEED1Ev") [flags 0x1]  <function_decl 0x7fe75aa52e00 __comp_dtor >) [0 __comp_dtor  S1 A8])
        (const_int 0 [0])) /usr/include/glibmm-2.4/glibmm/refptr.h:280 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 23 20 27 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.237929 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:280 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237929 ])
        (nil)))
(insn 27 23 28 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/include/glibmm-2.4/glibmm/refptr.h:281 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 28 27 0 2 (use (reg/i:DI 0 ax)) /usr/include/glibmm-2.4/glibmm/refptr.h:281 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function T_CppObject* Glib::RefPtr<T_CppObject>::operator->() const [with T_CppObject = Gtk::Application] (_ZNK4Glib6RefPtrIN3Gtk11ApplicationEEptEv, funcdef_no=7721, decl_uid=231423, symbol_order=3218)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred AREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a0 (r84,l0) best AREG, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a1(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a2(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 15(l0): point = 0
   Insn 14(l0): point = 2
   Insn 10(l0): point = 4
   Insn 7(l0): point = 6
   Insn 6(l0): point = 8
   Insn 2(l0): point = 10
 a0(r84): [3..4]
 a1(r83): [5..6]
 a2(r85): [7..8]
Compressing live ranges: from 13 to 6 - 46%
Ranges after the compression:
 a0(r84): [0..1]
 a1(r83): [2..3]
 a2(r85): [4..5]
  regions=1, blocks=3, points=6
    allocnos=3 (big 0), copies=0, conflicts=0, ranges=3
Disposition:
    1:r83  l0     0    0:r84  l0     0    2:r85  l0     0
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


T_CppObject* Glib::RefPtr<T_CppObject>::operator->() const [with T_CppObject = Gtk::Application]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 0 [ax] 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 5[di] 6[bp]
;;  ref usage 	r0={2d,2u} r1={1d} r2={1d} r4={1d} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,4u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} 
;;    total ref usage 38{23d,15u,0e} in 6{6 regular + 0 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 83 84 85
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/glibmm-2.4/glibmm/refptr.h:193 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 85)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:195 89 {*movdi_internal}
     (nil))
(insn 7 6 10 2 (set (reg/f:DI 83 [ D.237930 ])
        (mem/f/j:DI (reg/f:DI 85) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 7 14 2 (set (reg:DI 84 [ <retval> ])
        (reg/f:DI 83 [ D.237930 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:195 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237930 ])
        (nil)))
(insn 14 10 15 2 (set (reg/i:DI 0 ax)
        (reg:DI 84 [ <retval> ])) /usr/include/glibmm-2.4/glibmm/refptr.h:196 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 84 [ <retval> ])
        (nil)))
(insn 15 14 0 2 (use (reg/i:DI 0 ax)) /usr/include/glibmm-2.4/glibmm/refptr.h:196 -1
     (nil))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 0 [ax] 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Glib::RefPtr<T_CppObject>::RefPtr(const Glib::RefPtr<T_CppObject>&) [with T_CppObject = Gtk::Application] (_ZN4Glib6RefPtrIN3Gtk11ApplicationEEC2ERKS3_, funcdef_no=7850, decl_uid=231479, symbol_order=3347)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 47.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r117: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r117,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r116: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r116,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r115: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r115,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r110: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a23 (r110,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r109: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a25 (r109,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r108,l0) best DIREG, allocno GENERAL_REGS
    r107: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r107,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a24 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a3(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r117,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a9(r116,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a11(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a14(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a15(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a16(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a17(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a18(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a19(r115,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a20(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a21(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a22(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a23(r110,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a24(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a25(r109,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 47(l0): point = 1
   Insn 46(l0): point = 3
   Insn 45(l0): point = 5
   Insn 44(l0): point = 7
   Insn 43(l0): point = 9
   Insn 42(l0): point = 11
   Insn 41(l0): point = 13
   Insn 40(l0): point = 15
   Insn 39(l0): point = 17
   Insn 38(l0): point = 19
   Insn 37(l0): point = 21
   Insn 36(l0): point = 23
   Insn 35(l0): point = 25
   Insn 34(l0): point = 27
   Insn 33(l0): point = 29
   Insn 32(l0): point = 31
   Insn 31(l0): point = 33
   Insn 30(l0): point = 35
   Insn 29(l0): point = 37
   Insn 28(l0): point = 39
   Insn 27(l0): point = 41
   Insn 26(l0): point = 43
   Insn 25(l0): point = 45
   Insn 14(l0): point = 48
   Insn 13(l0): point = 50
   Insn 12(l0): point = 52
   Insn 11(l0): point = 54
   Insn 10(l0): point = 56
   Insn 9(l0): point = 58
   Insn 8(l0): point = 60
   Insn 7(l0): point = 62
   Insn 3(l0): point = 64
   Insn 2(l0): point = 66
 a0(r101): [2..23]
 a1(r108): [4..5]
 a2(r107): [6..7]
 a3(r102): [6..19]
 a4(r106): [8..9]
 a5(r105): [10..11]
 a6(r104): [12..13]
 a7(r103): [14..15]
 a8(r117): [16..17]
 a9(r116): [20..21]
 a10(r100): [24..25]
 a11(r99): [26..27]
 a12(r98): [28..29]
 a13(r97): [30..31]
 a14(r92): [30..43]
 a15(r96): [32..33]
 a16(r95): [34..35]
 a17(r94): [36..37]
 a18(r93): [38..39]
 a19(r115): [40..41]
 a20(r114): [44..45]
 a21(r84): [51..52]
 a22(r111): [53..54]
 a23(r110): [57..58]
 a24(r83): [57..60]
 a25(r109): [61..62]
Compressing live ranges: from 69 to 44 - 63%
Ranges after the compression:
 a0(r101): [0..15]
 a1(r108): [0..1]
 a2(r107): [2..3]
 a3(r102): [2..13]
 a4(r106): [4..5]
 a5(r105): [6..7]
 a6(r104): [8..9]
 a7(r103): [10..11]
 a8(r117): [12..13]
 a9(r116): [14..15]
 a10(r100): [16..17]
 a11(r99): [18..19]
 a12(r98): [20..21]
 a13(r97): [22..23]
 a14(r92): [22..33]
 a15(r96): [24..25]
 a16(r95): [26..27]
 a17(r94): [28..29]
 a18(r93): [30..31]
 a19(r115): [32..33]
 a20(r114): [34..35]
 a21(r84): [36..37]
 a22(r111): [38..39]
 a23(r110): [40..41]
 a24(r83): [40..41]
 a25(r109): [42..43]
  regions=1, blocks=5, points=44
    allocnos=26 (big 0), copies=0, conflicts=0, ranges=26
Disposition:
   24:r83  l0     1   21:r84  l0     0   14:r92  l0     1   18:r93  l0     0
   17:r94  l0     0   16:r95  l0     0   15:r96  l0     0   13:r97  l0     0
   12:r98  l0     0   11:r99  l0     0   10:r100 l0     0    0:r101 l0     0
    3:r102 l0     2    7:r103 l0     1    6:r104 l0     1    5:r105 l0     1
    4:r106 l0     1    2:r107 l0     1    1:r108 l0     1   25:r109 l0     0
   23:r110 l0     0   22:r111 l0     0   20:r114 l0     0   19:r115 l0     0
    9:r116 l0     1    8:r117 l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Glib::RefPtr<T_CppObject>::RefPtr(const Glib::RefPtr<T_CppObject>&) [with T_CppObject = Gtk::Application]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d,1u} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={7d,1u} r18={1d} r19={1d} r20={1d,13u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r84={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r109={1d,1u} r110={1d,1u} r111={1d,1u} r114={1d,1u} r115={1d,1u} r116={1d,1u} r117={1d,1u} 
;;    total ref usage 175{120d,55u,0e} in 33{32 regular + 1 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 84 109 110 111
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/glibmm-2.4/glibmm/refptr.h:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 src+0 S8 A64])
        (reg:DI 4 si [ src ])) /usr/include/glibmm-2.4/glibmm/refptr.h:218 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ src ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 109)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -16 [0xfffffffffffffff0])) [0 src+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:220 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 83 [ D.237931 ])
        (mem/f/j:DI (reg/f:DI 109) [0 src_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:220 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 109)
        (nil)))
(insn 9 8 10 2 (set (reg/f:DI 110)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:220 89 {*movdi_internal}
     (nil))
(insn 10 9 11 2 (set (mem/f/j:DI (reg/f:DI 110) [0 this_3(D)->pCppObject_+0 S8 A64])
        (reg/f:DI 83 [ D.237931 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:220 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 110)
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.237931 ])
            (nil))))
(insn 11 10 12 2 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:222 89 {*movdi_internal}
     (nil))
(insn 12 11 13 2 (set (reg/f:DI 84 [ D.237931 ])
        (mem/f/j:DI (reg/f:DI 111) [0 this_3(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:222 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 13 12 14 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 84 [ D.237931 ])
            (const_int 0 [0]))) /usr/include/glibmm-2.4/glibmm/refptr.h:222 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 84 [ D.237931 ])
        (nil)))
(jump_insn 14 13 15 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 50)
            (pc))) /usr/include/glibmm-2.4/glibmm/refptr.h:222 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 50)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 114 115 116 117
(note 15 14 25 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 25 15 26 3 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (nil))
(insn 26 25 27 3 (set (reg/f:DI 92 [ D.237931 ])
        (mem/f/j:DI (reg/f:DI 114) [0 this_3(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (nil)))
(insn 27 26 28 3 (set (reg/f:DI 115)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (nil))
(insn 28 27 29 3 (set (reg/f:DI 93 [ D.237931 ])
        (mem/f/j:DI (reg/f:DI 115) [0 this_3(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 115)
        (nil)))
(insn 29 28 30 3 (set (reg/f:DI 94 [ D.237932 ])
        (mem/f/j:DI (reg/f:DI 93 [ D.237931 ]) [0 _13->D.181299.D.107647._vptr.Object+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.237931 ])
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (reg/f:DI 95 [ D.237932 ])
                (plus:DI (reg/f:DI 94 [ D.237932 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:223 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.237932 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 3 (set (reg:DI 96 [ D.237933 ])
        (mem:DI (reg/f:DI 95 [ D.237932 ]) [0 MEM[(long int *)_15]+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 95 [ D.237932 ])
        (nil)))
(insn 32 31 33 3 (set (reg:DI 97 [ D.237934 ])
        (reg:DI 96 [ D.237933 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 96 [ D.237933 ])
        (nil)))
(insn 33 32 34 3 (parallel [
            (set (reg/f:DI 98 [ D.237935 ])
                (plus:DI (reg/f:DI 92 [ D.237931 ])
                    (reg:DI 97 [ D.237934 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:223 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 97 [ D.237934 ])
        (expr_list:REG_DEAD (reg/f:DI 92 [ D.237931 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 34 33 35 3 (set (reg/f:DI 99 [ D.237932 ])
        (mem/f/j:DI (reg/f:DI 98 [ D.237935 ]) [0 _18->_vptr.ObjectBase+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.237935 ])
        (nil)))
(insn 35 34 36 3 (parallel [
            (set (reg/f:DI 100 [ D.237932 ])
                (plus:DI (reg/f:DI 99 [ D.237932 ])
                    (const_int 16 [0x10])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:223 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.237932 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 36 35 37 3 (set (reg/f:DI 101 [ D.237936 ])
        (mem/f:DI (reg/f:DI 100 [ D.237932 ]) [0 *_20+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.237932 ])
        (nil)))
(insn 37 36 38 3 (set (reg/f:DI 116)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (nil))
(insn 38 37 39 3 (set (reg/f:DI 102 [ D.237931 ])
        (mem/f/j:DI (reg/f:DI 116) [0 this_3(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 116)
        (nil)))
(insn 39 38 40 3 (set (reg/f:DI 117)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (nil))
(insn 40 39 41 3 (set (reg/f:DI 103 [ D.237931 ])
        (mem/f/j:DI (reg/f:DI 117) [0 this_3(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 117)
        (nil)))
(insn 41 40 42 3 (set (reg/f:DI 104 [ D.237932 ])
        (mem/f/j:DI (reg/f:DI 103 [ D.237931 ]) [0 _23->D.181299.D.107647._vptr.Object+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.237931 ])
        (nil)))
(insn 42 41 43 3 (parallel [
            (set (reg/f:DI 105 [ D.237932 ])
                (plus:DI (reg/f:DI 104 [ D.237932 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:223 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.237932 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 43 42 44 3 (set (reg:DI 106 [ D.237933 ])
        (mem:DI (reg/f:DI 105 [ D.237932 ]) [0 MEM[(long int *)_25]+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 105 [ D.237932 ])
        (nil)))
(insn 44 43 45 3 (set (reg:DI 107 [ D.237934 ])
        (reg:DI 106 [ D.237933 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 106 [ D.237933 ])
        (nil)))
(insn 45 44 46 3 (parallel [
            (set (reg/f:DI 108 [ D.237935 ])
                (plus:DI (reg/f:DI 102 [ D.237931 ])
                    (reg:DI 107 [ D.237934 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:223 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 107 [ D.237934 ])
        (expr_list:REG_DEAD (reg/f:DI 102 [ D.237931 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 46 45 47 3 (set (reg:DI 5 di)
        (reg/f:DI 108 [ D.237935 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108 [ D.237935 ])
        (nil)))
(call_insn 47 46 50 3 (call (mem:QI (reg/f:DI 101 [ D.237936 ]) [0 *OBJ_TYPE_REF(_21;(const struct ObjectBase)_11->2) S1 A8])
        (const_int 0 [0])) /usr/include/glibmm-2.4/glibmm/refptr.h:223 642 {*call}
     (expr_list:REG_DEAD (reg/f:DI 101 [ D.237936 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 50 47 51 4 35 "" [1 uses])
(note 51 50 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function Glib::RefPtr<T_CppObject>::~RefPtr() [with T_CppObject = Gtk::Application] (_ZN4Glib6RefPtrIN3Gtk11ApplicationEED2Ev, funcdef_no=7853, decl_uid=231495, symbol_order=3350)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 5 n_edges 5 count 5 (    1)
Building IRA IR
verify found no changes in insn with uid = 42.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r114: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a8 (r114,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r113: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a9 (r113,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r112: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a19 (r112,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r111: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a20 (r111,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r108: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a22 (r108,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r107: preferred DIREG, alternative GENERAL_REGS, allocno GENERAL_REGS
    a1 (r107,l0) best DIREG, allocno GENERAL_REGS
    r106: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r106,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r105: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r105,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r104: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r104,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r103: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r103,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r102: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a7 (r102,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r101: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r101,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r100: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r100,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r99: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a10 (r99,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r98: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a11 (r98,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r97: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a12 (r97,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r96: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a13 (r96,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r95: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a15 (r95,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r94: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a16 (r94,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r93: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a17 (r93,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r92: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a18 (r92,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r91: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a14 (r91,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a21 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r100,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r107,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:6
  a2(r106,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a3(r101,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a4(r105,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a5(r104,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a6(r103,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a7(r102,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a8(r114,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a9(r113,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a10(r99,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a11(r98,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a12(r97,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a13(r96,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:16 SSE_REGS:16 ALL_SSE_REGS:16 MMX_REGS:21 FP_TOP_SSE_REGS:308 FP_SECOND_SSE_REGS:308 FLOAT_SSE_REGS:308 FLOAT_INT_REGS:308 INT_SSE_REGS:17 FLOAT_INT_SSE_REGS:308 ALL_REGS:308 MEM:4
  a14(r91,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a15(r95,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a16(r94,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:21 SSE_REGS:21 ALL_SSE_REGS:21 MMX_REGS:26 FP_TOP_SSE_REGS:416 FP_SECOND_SSE_REGS:416 FLOAT_SSE_REGS:416 FLOAT_INT_REGS:416 INT_SSE_REGS:22 FLOAT_INT_SSE_REGS:416 ALL_REGS:416 MEM:7
  a17(r93,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:7
  a18(r92,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a19(r112,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a20(r111,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a21(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a22(r108,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 42(l0): point = 1
   Insn 41(l0): point = 3
   Insn 40(l0): point = 5
   Insn 39(l0): point = 7
   Insn 38(l0): point = 9
   Insn 37(l0): point = 11
   Insn 36(l0): point = 13
   Insn 35(l0): point = 15
   Insn 34(l0): point = 17
   Insn 33(l0): point = 19
   Insn 32(l0): point = 21
   Insn 31(l0): point = 23
   Insn 30(l0): point = 25
   Insn 29(l0): point = 27
   Insn 28(l0): point = 29
   Insn 27(l0): point = 31
   Insn 26(l0): point = 33
   Insn 25(l0): point = 35
   Insn 24(l0): point = 37
   Insn 23(l0): point = 39
   Insn 22(l0): point = 41
   Insn 21(l0): point = 43
   Insn 20(l0): point = 45
   Insn 9(l0): point = 48
   Insn 8(l0): point = 50
   Insn 7(l0): point = 52
   Insn 6(l0): point = 54
   Insn 2(l0): point = 56
 a0(r100): [2..23]
 a1(r107): [4..5]
 a2(r106): [6..7]
 a3(r101): [6..19]
 a4(r105): [8..9]
 a5(r104): [10..11]
 a6(r103): [12..13]
 a7(r102): [14..15]
 a8(r114): [16..17]
 a9(r113): [20..21]
 a10(r99): [24..25]
 a11(r98): [26..27]
 a12(r97): [28..29]
 a13(r96): [30..31]
 a14(r91): [30..43]
 a15(r95): [32..33]
 a16(r94): [34..35]
 a17(r93): [36..37]
 a18(r92): [38..39]
 a19(r112): [40..41]
 a20(r111): [44..45]
 a21(r83): [51..52]
 a22(r108): [53..54]
Compressing live ranges: from 59 to 40 - 67%
Ranges after the compression:
 a0(r100): [0..15]
 a1(r107): [0..1]
 a2(r106): [2..3]
 a3(r101): [2..13]
 a4(r105): [4..5]
 a5(r104): [6..7]
 a6(r103): [8..9]
 a7(r102): [10..11]
 a8(r114): [12..13]
 a9(r113): [14..15]
 a10(r99): [16..17]
 a11(r98): [18..19]
 a12(r97): [20..21]
 a13(r96): [22..23]
 a14(r91): [22..33]
 a15(r95): [24..25]
 a16(r94): [26..27]
 a17(r93): [28..29]
 a18(r92): [30..31]
 a19(r112): [32..33]
 a20(r111): [34..35]
 a21(r83): [36..37]
 a22(r108): [38..39]
  regions=1, blocks=5, points=40
    allocnos=23 (big 0), copies=0, conflicts=0, ranges=23
Disposition:
   21:r83  l0     0   14:r91  l0     1   18:r92  l0     0   17:r93  l0     0
   16:r94  l0     0   15:r95  l0     0   13:r96  l0     0   12:r97  l0     0
   11:r98  l0     0   10:r99  l0     0    0:r100 l0     0    3:r101 l0     2
    7:r102 l0     1    6:r103 l0     1    5:r104 l0     1    4:r105 l0     1
    2:r106 l0     1    1:r107 l0     1   22:r108 l0     0   20:r111 l0     0
   19:r112 l0     0    9:r113 l0     1    8:r114 l0     1
+++Costs: overall -1, reg -1, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


Glib::RefPtr<T_CppObject>::~RefPtr() [with T_CppObject = Gtk::Application]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={2d} r5={3d,2u} r6={1d,4u} r7={1d,5u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,3u} r17={7d,1u} r18={1d} r19={1d} r20={1d,10u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} r83={1d,1u} r91={1d,1u} r92={1d,1u} r93={1d,1u} r94={1d,1u} r95={1d,1u} r96={1d,1u} r97={1d,1u} r98={1d,1u} r99={1d,1u} r100={1d,1u} r101={1d,1u} r102={1d,1u} r103={1d,1u} r104={1d,1u} r105={1d,1u} r106={1d,1u} r107={1d,1u} r108={1d,1u} r111={1d,1u} r112={1d,1u} r113={1d,1u} r114={1d,1u} 
;;    total ref usage 165{117d,48u,0e} in 28{27 regular + 1 call} insns.
(note 1 0 4 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags] 83 108
(note 4 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 4 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/glibmm-2.4/glibmm/refptr.h:205 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(note 3 2 6 2 NOTE_INSN_FUNCTION_BEG)
(insn 6 3 7 2 (set (reg/f:DI 108)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:207 89 {*movdi_internal}
     (nil))
(insn 7 6 8 2 (set (reg/f:DI 83 [ D.237937 ])
        (mem/f/j:DI (reg/f:DI 108) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:207 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 108)
        (nil)))
(insn 8 7 9 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (reg/f:DI 83 [ D.237937 ])
            (const_int 0 [0]))) /usr/include/glibmm-2.4/glibmm/refptr.h:207 4 {*cmpdi_ccno_1}
     (expr_list:REG_DEAD (reg/f:DI 83 [ D.237937 ])
        (nil)))
(jump_insn 9 8 10 2 (set (pc)
        (if_then_else (eq (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 47)
            (pc))) /usr/include/glibmm-2.4/glibmm/refptr.h:207 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 47)
;;  succ:       3 (FALLTHRU)
;;              4
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 [] 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 111 112 113 114
(note 10 9 20 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 20 10 21 3 (set (reg/f:DI 111)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (nil))
(insn 21 20 22 3 (set (reg/f:DI 91 [ D.237937 ])
        (mem/f/j:DI (reg/f:DI 111) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 111)
        (nil)))
(insn 22 21 23 3 (set (reg/f:DI 112)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (nil))
(insn 23 22 24 3 (set (reg/f:DI 92 [ D.237937 ])
        (mem/f/j:DI (reg/f:DI 112) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 112)
        (nil)))
(insn 24 23 25 3 (set (reg/f:DI 93 [ D.237938 ])
        (mem/f/j:DI (reg/f:DI 92 [ D.237937 ]) [0 _11->D.181299.D.107647._vptr.Object+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 92 [ D.237937 ])
        (nil)))
(insn 25 24 26 3 (parallel [
            (set (reg/f:DI 94 [ D.237938 ])
                (plus:DI (reg/f:DI 93 [ D.237938 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:208 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 93 [ D.237938 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 26 25 27 3 (set (reg:DI 95 [ D.237939 ])
        (mem:DI (reg/f:DI 94 [ D.237938 ]) [0 MEM[(long int *)_13]+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 94 [ D.237938 ])
        (nil)))
(insn 27 26 28 3 (set (reg:DI 96 [ D.237940 ])
        (reg:DI 95 [ D.237939 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 95 [ D.237939 ])
        (nil)))
(insn 28 27 29 3 (parallel [
            (set (reg/f:DI 97 [ D.237941 ])
                (plus:DI (reg/f:DI 91 [ D.237937 ])
                    (reg:DI 96 [ D.237940 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:208 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 96 [ D.237940 ])
        (expr_list:REG_DEAD (reg/f:DI 91 [ D.237937 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 29 28 30 3 (set (reg/f:DI 98 [ D.237938 ])
        (mem/f/j:DI (reg/f:DI 97 [ D.237941 ]) [0 _16->_vptr.ObjectBase+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 97 [ D.237941 ])
        (nil)))
(insn 30 29 31 3 (parallel [
            (set (reg/f:DI 99 [ D.237938 ])
                (plus:DI (reg/f:DI 98 [ D.237938 ])
                    (const_int 24 [0x18])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:208 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 98 [ D.237938 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 31 30 32 3 (set (reg/f:DI 100 [ D.237942 ])
        (mem/f:DI (reg/f:DI 99 [ D.237938 ]) [0 *_18+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 99 [ D.237938 ])
        (nil)))
(insn 32 31 33 3 (set (reg/f:DI 113)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (nil))
(insn 33 32 34 3 (set (reg/f:DI 101 [ D.237937 ])
        (mem/f/j:DI (reg/f:DI 113) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 113)
        (nil)))
(insn 34 33 35 3 (set (reg/f:DI 114)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (nil))
(insn 35 34 36 3 (set (reg/f:DI 102 [ D.237937 ])
        (mem/f/j:DI (reg/f:DI 114) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 114)
        (nil)))
(insn 36 35 37 3 (set (reg/f:DI 103 [ D.237938 ])
        (mem/f/j:DI (reg/f:DI 102 [ D.237937 ]) [0 _21->D.181299.D.107647._vptr.Object+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 102 [ D.237937 ])
        (nil)))
(insn 37 36 38 3 (parallel [
            (set (reg/f:DI 104 [ D.237938 ])
                (plus:DI (reg/f:DI 103 [ D.237938 ])
                    (const_int -24 [0xffffffffffffffe8])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:208 221 {*adddi_1}
     (expr_list:REG_DEAD (reg/f:DI 103 [ D.237938 ])
        (expr_list:REG_UNUSED (reg:CC 17 flags)
            (nil))))
(insn 38 37 39 3 (set (reg:DI 105 [ D.237939 ])
        (mem:DI (reg/f:DI 104 [ D.237938 ]) [0 MEM[(long int *)_23]+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 104 [ D.237938 ])
        (nil)))
(insn 39 38 40 3 (set (reg:DI 106 [ D.237940 ])
        (reg:DI 105 [ D.237939 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 105 [ D.237939 ])
        (nil)))
(insn 40 39 41 3 (parallel [
            (set (reg/f:DI 107 [ D.237941 ])
                (plus:DI (reg/f:DI 101 [ D.237937 ])
                    (reg:DI 106 [ D.237940 ])))
            (clobber (reg:CC 17 flags))
        ]) /usr/include/glibmm-2.4/glibmm/refptr.h:208 221 {*adddi_1}
     (expr_list:REG_DEAD (reg:DI 106 [ D.237940 ])
        (expr_list:REG_DEAD (reg/f:DI 101 [ D.237937 ])
            (expr_list:REG_UNUSED (reg:CC 17 flags)
                (nil)))))
(insn 41 40 42 3 (set (reg:DI 5 di)
        (reg/f:DI 107 [ D.237941 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 107 [ D.237941 ])
        (nil)))
(call_insn 42 41 47 3 (call (mem:QI (reg/f:DI 100 [ D.237942 ]) [0 *OBJ_TYPE_REF(_19;(const struct ObjectBase)_9->3) S1 A8])
        (const_int 0 [0])) /usr/include/glibmm-2.4/glibmm/refptr.h:208 642 {*call}
     (expr_list:REG_DEAD (reg/f:DI 100 [ D.237942 ])
        (expr_list:REG_DEAD (reg:DI 5 di)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
;;  succ:       4 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;;              2
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 47 42 48 4 37 "" [1 uses])
(note 48 47 0 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void Glib::RefPtr<T_CppObject>::swap(Glib::RefPtr<T_CppObject>&) [with T_CppObject = Gtk::Application] (_ZN4Glib6RefPtrIN3Gtk11ApplicationEE4swapERS3_, funcdef_no=7855, decl_uid=231402, symbol_order=3352)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs

    r89: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a1 (r89,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r88: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a0 (r88,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r87: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a2 (r87,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r86: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a4 (r86,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r85: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a5 (r85,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r84: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a6 (r84,l0) best GENERAL_REGS, allocno GENERAL_REGS
    r83: preferred GENERAL_REGS, alternative NO_REGS, allocno GENERAL_REGS
    a3 (r83,l0) best GENERAL_REGS, allocno GENERAL_REGS

  a0(r88,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a1(r89,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a2(r87,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a3(r83,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a4(r86,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a5(r85,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8
  a6(r84,l0) costs: AREG:0 DREG:0 CREG:0 BREG:0 SIREG:0 DIREG:0 AD_REGS:0 Q_REGS:0 NON_Q_REGS:0 INDEX_REGS:0 GENERAL_REGS:0 LEGACY_REGS:0 CLOBBERED_REGS:0 SSE_FIRST_REG:20 SSE_REGS:20 ALL_SSE_REGS:20 MMX_REGS:25 FP_TOP_SSE_REGS:312 FP_SECOND_SSE_REGS:312 FLOAT_SSE_REGS:312 FLOAT_INT_REGS:312 INT_SSE_REGS:21 FLOAT_INT_SSE_REGS:312 ALL_REGS:312 MEM:8

   Insn 16(l0): point = 0
   Insn 15(l0): point = 2
   Insn 14(l0): point = 4
   Insn 13(l0): point = 6
   Insn 12(l0): point = 8
   Insn 11(l0): point = 10
   Insn 10(l0): point = 12
   Insn 9(l0): point = 14
   Insn 8(l0): point = 16
   Insn 7(l0): point = 18
   Insn 3(l0): point = 20
   Insn 2(l0): point = 22
 a0(r88): [1..4]
 a1(r89): [1..2]
 a2(r87): [7..8]
 a3(r83): [7..10]
 a4(r86): [11..12]
 a5(r85): [15..16]
 a6(r84): [17..18]
Compressing live ranges: from 25 to 10 - 40%
Ranges after the compression:
 a0(r88): [0..1]
 a1(r89): [0..1]
 a2(r87): [2..3]
 a3(r83): [2..3]
 a4(r86): [4..5]
 a5(r85): [6..7]
 a6(r84): [8..9]
  regions=1, blocks=3, points=10
    allocnos=7 (big 0), copies=0, conflicts=0, ranges=7
Disposition:
    3:r83  l0     1    6:r84  l0     0    5:r85  l0     0    4:r86  l0     0
    2:r87  l0     0    0:r88  l0     0    1:r89  l0     1
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void Glib::RefPtr<T_CppObject>::swap(Glib::RefPtr<T_CppObject>&) [with T_CppObject = Gtk::Application]

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp]
;;  ref usage 	r0={1d} r1={1d} r2={1d} r4={1d,1u} r5={1d,1u} r6={1d,2u} r7={1d,2u} r16={1d,1u} r20={1d,10u} r21={1d} r22={1d} r23={1d} r24={1d} r25={1d} r26={1d} r27={1d} r28={1d} r37={1d} r38={1d} r83={1d,1u} r84={1d,1u} r85={1d,1u} r86={1d,1u} r87={1d,1u} r88={1d,1u} r89={1d,1u} 
;;    total ref usage 50{26d,24u,0e} in 12{12 regular + 0 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 83 84 85 86 87 88 89
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])
        (reg:DI 5 di [ this ])) /usr/include/glibmm-2.4/glibmm/refptr.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 5 di [ this ])
        (nil)))
(insn 3 2 4 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 other+0 S8 A64])
        (reg:DI 4 si [ other ])) /usr/include/glibmm-2.4/glibmm/refptr.h:244 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg:DI 4 si [ other ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg/f:DI 84)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:246 89 {*movdi_internal}
     (nil))
(insn 8 7 9 2 (set (reg/f:DI 85)
        (mem/f/j:DI (reg/f:DI 84) [0 this_1(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:246 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 84)
        (nil)))
(insn 9 8 10 2 (set (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp+0 S8 A64])
        (reg/f:DI 85)) /usr/include/glibmm-2.4/glibmm/refptr.h:246 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 85)
        (nil)))
(insn 10 9 11 2 (set (reg/f:DI 86)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 other+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:247 89 {*movdi_internal}
     (nil))
(insn 11 10 12 2 (set (reg/f:DI 83 [ D.237943 ])
        (mem/f/j:DI (reg/f:DI 86) [0 other_3(D)->pCppObject_+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:247 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 86)
        (nil)))
(insn 12 11 13 2 (set (reg/f:DI 87)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -24 [0xffffffffffffffe8])) [0 this+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:247 89 {*movdi_internal}
     (nil))
(insn 13 12 14 2 (set (mem/f/j:DI (reg/f:DI 87) [0 this_1(D)->pCppObject_+0 S8 A64])
        (reg/f:DI 83 [ D.237943 ])) /usr/include/glibmm-2.4/glibmm/refptr.h:247 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 87)
        (expr_list:REG_DEAD (reg/f:DI 83 [ D.237943 ])
            (nil))))
(insn 14 13 15 2 (set (reg/f:DI 88)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -32 [0xffffffffffffffe0])) [0 other+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:248 89 {*movdi_internal}
     (nil))
(insn 15 14 16 2 (set (reg/f:DI 89)
        (mem/f/c:DI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 temp+0 S8 A64])) /usr/include/glibmm-2.4/glibmm/refptr.h:248 89 {*movdi_internal}
     (nil))
(insn 16 15 0 2 (set (mem/f/j:DI (reg/f:DI 88) [0 other_3(D)->pCppObject_+0 S8 A64])
        (reg/f:DI 89)) /usr/include/glibmm-2.4/glibmm/refptr.h:248 89 {*movdi_internal}
     (expr_list:REG_DEAD (reg/f:DI 89)
        (expr_list:REG_DEAD (reg/f:DI 88)
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function void __static_initialization_and_destruction_0(int, int) (_Z41__static_initialization_and_destruction_0ii, funcdef_no=8173, decl_uid=237758, symbol_order=3736)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 6 n_edges 7 count 6 (    1)
Building IRA IR
verify found no changes in insn with uid = 14.
verify found no changes in insn with uid = 18.
verify found no changes in insn with uid = 20.
verify found no changes in insn with uid = 24.
verify found no changes in insn with uid = 27.
verify found no changes in insn with uid = 31.
verify found no changes in insn with uid = 35.
verify found no changes in insn with uid = 39.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 39(l0): point = 1
   Insn 38(l0): point = 3
   Insn 37(l0): point = 5
   Insn 36(l0): point = 7
   Insn 35(l0): point = 9
   Insn 34(l0): point = 11
   Insn 33(l0): point = 13
   Insn 32(l0): point = 15
   Insn 31(l0): point = 17
   Insn 30(l0): point = 19
   Insn 29(l0): point = 21
   Insn 28(l0): point = 23
   Insn 27(l0): point = 25
   Insn 26(l0): point = 27
   Insn 25(l0): point = 29
   Insn 24(l0): point = 31
   Insn 23(l0): point = 33
   Insn 22(l0): point = 35
   Insn 21(l0): point = 37
   Insn 20(l0): point = 39
   Insn 19(l0): point = 41
   Insn 18(l0): point = 43
   Insn 17(l0): point = 45
   Insn 16(l0): point = 47
   Insn 15(l0): point = 49
   Insn 14(l0): point = 51
   Insn 13(l0): point = 53
   Insn 11(l0): point = 56
   Insn 10(l0): point = 58
   Insn 8(l0): point = 61
   Insn 7(l0): point = 63
   Insn 3(l0): point = 65
   Insn 2(l0): point = 67
Compressing live ranges: from 70 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=6, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


void __static_initialization_and_destruction_0(int, int)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 0[ax] 1[dx] 4[si] 5[di] 6[bp] 7[sp] 17[flags]
;;  ref usage 	r0={9d} r1={14d,5u} r2={9d} r4={15d,7u} r5={17d,9u} r6={1d,5u} r7={1d,13u} r8={8d} r9={8d} r10={8d} r11={8d} r12={8d} r13={8d} r14={8d} r15={8d} r16={1d,4u} r17={10d,2u} r18={8d} r19={8d} r20={1d,9u} r21={9d} r22={9d} r23={9d} r24={9d} r25={9d} r26={9d} r27={9d} r28={9d} r29={8d} r30={8d} r31={8d} r32={8d} r33={8d} r34={8d} r35={8d} r36={8d} r37={9d} r38={9d} r39={8d} r40={8d} r45={8d} r46={8d} r47={8d} r48={8d} r49={8d} r50={8d} r51={8d} r52={8d} r53={8d} r54={8d} r55={8d} r56={8d} r57={8d} r58={8d} r59={8d} r60={8d} r61={8d} r62={8d} r63={8d} r64={8d} r65={8d} r66={8d} r67={8d} r68={8d} r69={8d} r70={8d} r71={8d} r72={8d} r73={8d} r74={8d} r75={8d} r76={8d} 
;;    total ref usage 638{584d,54u,0e} in 33{25 regular + 8 call} insns.
(note 1 0 5 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 3, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 5 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(insn 2 5 3 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
        (reg:SI 5 di [ __initialize_p ])) src/StatusBar.cpp:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 5 di [ __initialize_p ])
        (nil)))
(insn 3 2 4 2 (set (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
        (reg:SI 4 si [ __priority ])) src/StatusBar.cpp:130 90 {*movsi_internal}
     (expr_list:REG_DEAD (reg:SI 4 si [ __priority ])
        (nil)))
(note 4 3 7 2 NOTE_INSN_FUNCTION_BEG)
(insn 7 4 8 2 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -4 [0xfffffffffffffffc])) [0 __initialize_p+0 S4 A32])
            (const_int 1 [0x1]))) src/StatusBar.cpp:130 7 {*cmpsi_1}
     (nil))
(jump_insn 8 7 9 2 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) src/StatusBar.cpp:130 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
;;  succ:       3 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 3, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 2, next block 4, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       2 (FALLTHRU)
;; bb 3 artificial_defs: { }
;; bb 3 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 17 [flags]
(note 9 8 10 3 [bb 3] NOTE_INSN_BASIC_BLOCK)
(insn 10 9 11 3 (set (reg:CCZ 17 flags)
        (compare:CCZ (mem/c:SI (plus:DI (reg/f:DI 20 frame)
                    (const_int -8 [0xfffffffffffffff8])) [0 __priority+0 S4 A32])
            (const_int 65535 [0xffff]))) src/StatusBar.cpp:130 7 {*cmpsi_1}
     (nil))
(jump_insn 11 10 12 3 (set (pc)
        (if_then_else (ne (reg:CCZ 17 flags)
                (const_int 0 [0]))
            (label_ref:DI 42)
            (pc))) src/StatusBar.cpp:130 596 {*jcc_1}
     (expr_list:REG_DEAD (reg:CCZ 17 flags)
        (nil))
 -> 42)
;;  succ:       4 (FALLTHRU)
;;              5
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 4, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 3, next block 5, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       3 (FALLTHRU)
;; bb 4 artificial_defs: { }
;; bb 4 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 12 11 13 4 [bb 4] NOTE_INSN_BASIC_BLOCK)
(insn 13 12 14 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fe75aa46be0 __ioinit>)) /usr/include/c++/4.9.2/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 14 13 15 4 (call (mem:QI (symbol_ref:DI ("_ZNSt8ios_base4InitC1Ev") [flags 0x41]  <function_decl 0x7fe762b7fe00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) /usr/include/c++/4.9.2/iostream:74 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (nil))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 15 14 16 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fe75a3b5be0 __dso_handle>)) /usr/include/c++/4.9.2/iostream:74 89 {*movdi_internal}
     (nil))
(insn 16 15 17 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZStL8__ioinit") [flags 0x2]  <var_decl 0x7fe75aa46be0 __ioinit>)) /usr/include/c++/4.9.2/iostream:74 89 {*movdi_internal}
     (nil))
(insn 17 16 18 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZNSt8ios_base4InitD1Ev") [flags 0x41]  <function_decl 0x7fe762b86000 __comp_dtor >)) /usr/include/c++/4.9.2/iostream:74 89 {*movdi_internal}
     (nil))
(call_insn 18 17 19 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fe75a3c3000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) /usr/include/c++/4.9.2/iostream:74 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 19 18 20 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3appE") [flags 0x2]  <var_decl 0x7fe75aa3eab0 app>)) src/StatusBar.cpp:56 89 {*movdi_internal}
     (nil))
(call_insn 20 19 21 4 (call (mem:QI (symbol_ref/i:DI ("_ZN4Glib6RefPtrIN3Gtk11ApplicationEEC1Ev") [flags 0x1]  <function_decl 0x7fe75aa52c00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:56 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_EH_REGION (const_int 0 [0])
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (nil)))
(insn 21 20 22 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fe75a3b5be0 __dso_handle>)) src/StatusBar.cpp:56 89 {*movdi_internal}
     (nil))
(insn 22 21 23 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZN9StatusBar3appE") [flags 0x2]  <var_decl 0x7fe75aa3eab0 app>)) src/StatusBar.cpp:56 89 {*movdi_internal}
     (nil))
(insn 23 22 24 4 (set (reg:DI 5 di)
        (symbol_ref/i:DI ("_ZN4Glib6RefPtrIN3Gtk11ApplicationEED1Ev") [flags 0x1]  <function_decl 0x7fe75aa52e00 __comp_dtor >)) src/StatusBar.cpp:56 89 {*movdi_internal}
     (nil))
(call_insn 24 23 25 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fe75a3c3000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:56 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 25 24 26 4 (set (reg:SI 4 si)
        (const_int 0 [0])) src/StatusBar.cpp:57 90 {*movsi_internal}
     (nil))
(insn 26 25 27 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:57 89 {*movdi_internal}
     (nil))
(call_insn 27 26 28 4 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk6WindowC1ENS_10WindowTypeE") [flags 0x41]  <function_decl 0x7fe75cc01b00 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:57 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (nil)))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
(insn 28 27 29 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fe75a3b5be0 __dso_handle>)) src/StatusBar.cpp:57 89 {*movdi_internal}
     (nil))
(insn 29 28 30 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZN9StatusBar3winE") [flags 0x2]  <var_decl 0x7fe75aa3eb48 win>)) src/StatusBar.cpp:57 89 {*movdi_internal}
     (nil))
(insn 30 29 31 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN3Gtk6WindowD1Ev") [flags 0x41]  <function_decl 0x7fe75cc08400 __comp_dtor >)) src/StatusBar.cpp:57 89 {*movdi_internal}
     (nil))
(call_insn 31 30 32 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fe75a3c3000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:57 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
(insn 32 31 33 4 (set (reg:SI 1 dx)
        (const_int 0 [0])) src/StatusBar.cpp:58 90 {*movsi_internal}
     (nil))
(insn 33 32 34 4 (set (reg:SI 4 si)
        (const_int 0 [0])) src/StatusBar.cpp:58 90 {*movsi_internal}
     (nil))
(insn 34 33 35 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN9StatusBar3barE") [flags 0x2]  <var_decl 0x7fe75aa3ec78 bar>)) src/StatusBar.cpp:58 89 {*movdi_internal}
     (nil))
(call_insn 35 34 36 4 (call (mem:QI (symbol_ref:DI ("_ZN3Gtk3BoxC1ENS_11OrientationEi") [flags 0x41]  <function_decl 0x7fe75cc3f700 __comp_ctor >) [0 __comp_ctor  S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:58 642 {*call}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_DEAD (reg:SI 1 dx)
                (nil))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (expr_list:SI (use (reg:SI 1 dx))
                (nil)))))
(insn 36 35 37 4 (set (reg:DI 1 dx)
        (symbol_ref:DI ("__dso_handle") [flags 0x42]  <var_decl 0x7fe75a3b5be0 __dso_handle>)) src/StatusBar.cpp:58 89 {*movdi_internal}
     (nil))
(insn 37 36 38 4 (set (reg:DI 4 si)
        (symbol_ref:DI ("_ZN9StatusBar3barE") [flags 0x2]  <var_decl 0x7fe75aa3ec78 bar>)) src/StatusBar.cpp:58 89 {*movdi_internal}
     (nil))
(insn 38 37 39 4 (set (reg:DI 5 di)
        (symbol_ref:DI ("_ZN3Gtk3BoxD1Ev") [flags 0x41]  <function_decl 0x7fe75cc46000 __comp_dtor >)) src/StatusBar.cpp:58 89 {*movdi_internal}
     (nil))
(call_insn 39 38 42 4 (set (reg:SI 0 ax)
        (call (mem:QI (symbol_ref:DI ("__cxa_atexit") [flags 0x41]  <function_decl 0x7fe75a3c3000 __cxa_atexit>) [0 __cxa_atexit S1 A8])
            (const_int 0 [0]))) src/StatusBar.cpp:58 649 {*call_value}
     (expr_list:REG_DEAD (reg:DI 5 di)
        (expr_list:REG_DEAD (reg:DI 4 si)
            (expr_list:REG_DEAD (reg:DI 1 dx)
                (expr_list:REG_UNUSED (reg:SI 0 ax)
                    (expr_list:REG_EH_REGION (const_int 0 [0])
                        (nil))))))
    (expr_list:DI (use (reg:DI 5 di))
        (expr_list:DI (use (reg:DI 4 si))
            (expr_list:DI (use (reg:DI 1 dx))
                (nil)))))
;;  succ:       5 (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

;; basic block 5, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 4, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       4 (FALLTHRU)
;;              2
;;              3
;; bb 5 artificial_defs: { }
;; bb 5 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	
(code_label 42 39 43 5 41 "" [2 uses])
(note 43 42 0 5 [bb 5] NOTE_INSN_BASIC_BLOCK)
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]


;; Function (static initializers for src/StatusBar.cpp) (_GLOBAL__sub_I__ZN9StatusBar3appE, funcdef_no=8174, decl_uid=237764, symbol_order=4258)

starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called
df_worklist_dataflow_doublequeue:n_basic_blocks 3 n_edges 2 count 3 (    1)
Building IRA IR
verify found no changes in insn with uid = 7.
starting the processing of deferred insns
ending the processing of deferred insns
df_analyze called

Pass 0 for finding pseudo/allocno costs



   Insn 7(l0): point = 0
   Insn 6(l0): point = 2
   Insn 5(l0): point = 4
Compressing live ranges: from 7 to 0 - 0%
Ranges after the compression:
  regions=1, blocks=3, points=0
    allocnos=0 (big 0), copies=0, conflicts=0, ranges=0
Disposition:
+++Costs: overall 0, reg 0, mem 0, ld 0, st 0, move 0
+++       move loops 0, new jumps 0


(static initializers for src/StatusBar.cpp)

Dataflow summary:
;;  invalidated by call 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
;;  hardware regs used 	 7 [sp] 16 [argp] 20 [frame]
;;  regular block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  eh block artificial uses 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;;  entry block defs 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 6 [bp] 7 [sp] 16 [argp] 20 [frame] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 37 [r8] 38 [r9]
;;  exit block uses 	 6 [bp] 7 [sp] 20 [frame]
;;  regs ever live 	 4[si] 5[di] 6[bp] 7[sp]
;;  ref usage 	r0={2d} r1={2d} r2={2d} r4={3d,1u} r5={3d,1u} r6={1d,2u} r7={1d,3u} r8={1d} r9={1d} r10={1d} r11={1d} r12={1d} r13={1d} r14={1d} r15={1d} r16={1d,1u} r17={1d} r18={1d} r19={1d} r20={1d,2u} r21={2d} r22={2d} r23={2d} r24={2d} r25={2d} r26={2d} r27={2d} r28={2d} r29={1d} r30={1d} r31={1d} r32={1d} r33={1d} r34={1d} r35={1d} r36={1d} r37={2d} r38={2d} r39={1d} r40={1d} r45={1d} r46={1d} r47={1d} r48={1d} r49={1d} r50={1d} r51={1d} r52={1d} r53={1d} r54={1d} r55={1d} r56={1d} r57={1d} r58={1d} r59={1d} r60={1d} r61={1d} r62={1d} r63={1d} r64={1d} r65={1d} r66={1d} r67={1d} r68={1d} r69={1d} r70={1d} r71={1d} r72={1d} r73={1d} r74={1d} r75={1d} r76={1d} 
;;    total ref usage 99{89d,10u,0e} in 3{2 regular + 1 call} insns.
(note 1 0 3 NOTE_INSN_DELETED)
;; basic block 2, loop depth 0, count 0, freq 0, maybe hot
;;  prev block 0, next block 1, flags: (NEW, REACHABLE, RTL, MODIFIED)
;;  pred:       ENTRY (FALLTHRU)
;; bb 2 artificial_defs: { }
;; bb 2 artificial_uses: { u-1(6){ }u-1(7){ }u-1(16){ }u-1(20){ }}
;; lr  in  	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  use 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]
;; lr  def 	 0 [ax] 1 [dx] 2 [cx] 4 [si] 5 [di] 8 [st] 9 [st(1)] 10 [st(2)] 11 [st(3)] 12 [st(4)] 13 [st(5)] 14 [st(6)] 15 [st(7)] 17 [flags] 18 [fpsr] 19 [fpcr] 21 [xmm0] 22 [xmm1] 23 [xmm2] 24 [xmm3] 25 [xmm4] 26 [xmm5] 27 [xmm6] 28 [xmm7] 29 [mm0] 30 [mm1] 31 [mm2] 32 [mm3] 33 [mm4] 34 [mm5] 35 [mm6] 36 [mm7] 37 [r8] 38 [r9] 39 [r10] 40 [r11] 45 [xmm8] 46 [xmm9] 47 [xmm10] 48 [xmm11] 49 [xmm12] 50 [xmm13] 51 [xmm14] 52 [xmm15] 53 [] 54 [] 55 [] 56 [] 57 [] 58 [] 59 [] 60 [] 61 [] 62 [] 63 [] 64 [] 65 [] 66 [] 67 [] 68 [] 69 [] 70 [] 71 [] 72 [] 73 [] 74 [] 75 [] 76 []
(note 3 1 2 2 [bb 2] NOTE_INSN_BASIC_BLOCK)
(note 2 3 5 2 NOTE_INSN_FUNCTION_BEG)
(insn 5 2 6 2 (set (reg:SI 4 si)
        (const_int 65535 [0xffff])) src/StatusBar.cpp:130 90 {*movsi_internal}
     (nil))
(insn 6 5 7 2 (set (reg:SI 5 di)
        (const_int 1 [0x1])) src/StatusBar.cpp:130 90 {*movsi_internal}
     (nil))
(call_insn 7 6 0 2 (call (mem:QI (symbol_ref:DI ("_Z41__static_initialization_and_destruction_0ii") [flags 0x3]  <function_decl 0x7fe75a3adf00 __static_initialization_and_destruction_0>) [0 __static_initialization_and_destruction_0 S1 A8])
        (const_int 0 [0])) src/StatusBar.cpp:130 642 {*call}
     (expr_list:REG_DEAD (reg:SI 5 di)
        (expr_list:REG_DEAD (reg:SI 4 si)
            (expr_list:REG_EH_REGION (const_int 0 [0])
                (nil))))
    (expr_list:SI (use (reg:SI 5 di))
        (expr_list:SI (use (reg:SI 4 si))
            (nil))))
;;  succ:       EXIT [100.0%]  (FALLTHRU)
;; lr  out 	 6 [bp] 7 [sp] 16 [argp] 20 [frame]

